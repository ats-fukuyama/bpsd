C     $Id$
C
C     ***********************************************************
C
C           SAVE TRANSPORT DATA
C
C     ***********************************************************
C
      SUBROUTINE TRSAVE
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFNAM*32
C      CHARACTER KID*1
      CHARACTER K1*3,K2*3,K3*3,K4*3,K5*3,K6*3
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : SAVE FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFNAM
      IF(TRFNAM.EQ.'                                ') GOTO 900
      INQUIRE(FILE=TRFNAM,EXIST=LEX)
      IF(LEX) THEN
C         WRITE(6,*) '# OLD FILE IS GOING TO BE OVERWRITTEN.  ',
C     &              'ARE YOU SURE {Y/N} ?'
C         READ(5,'(A1)',ERR=1,END=900) KID
C         CALL GUCPTL(KID)
C         IF(KID.NE.'Y') GOTO 1
         OPEN(21,FILE=TRFNAM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFNAM,') IS ASSIGNED FOR OUTPUT.'
         GOTO 30
   10    WRITE(6,*) 'XX OLD FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 1
      ELSE
         OPEN(21,FILE=TRFNAM,IOSTAT=IST,STATUS='NEW',ERR=20,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# NEW FILE (',TRFNAM,') IS CREATED FOR OUTPUT.'
         GOTO 30
   20    WRITE(6,*) 'XX NEW FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 1
      ENDIF
C
   30 WRITE(21) NRMAX,DT,NGPST,TSST
      WRITE(21) RR,RA,RKAP,BB,RIPS,RIPE
      WRITE(21) PA,PZ,PN,PNS,PT,PTS
      WRITE(21) PNC,PNFE,PNNU,PNNUS
      WRITE(21) PROFN1,PROFN2,PROFT1,PROFT2,PROFU1,PROFU2,PROFJ1,PROFJ2,
     &          ALP,AD0,CNC,CDW,MDLKAI,MDLETA,MDLAD,MDLAVK
      WRITE(21) TPRST,MDLST,MDLNF,IZERO
      WRITE(21) PNBTOT,PNBR0,PNBRW,PNBENG,PNBRTG,MDLNB
      WRITE(21) PECTOT,PECR0,PECRW,PECTOE,PECNPR,MDLEC
      WRITE(21) PLHTOT,PLHR0,PLHRW,PLHTOE,PLHNPR,MDLLH
      WRITE(21) PICTOT,PICR0,PICRW,PICTOE,PICNPR,MDLIC
      WRITE(21) PNBCD,PECCD,PLHCD,PICCD,PBSCD,MDLCD
      WRITE(21) PELTOT,PELR0,PELRW,PELRAD,PELVEL,PELTIM,PELPAT,MDLPEL
      WRITE(21) DR,FKAP,PNSS,T,TST,VSEC,WPPRE,TPRE
      WRITE(21) RG,RM,RN,RT,RW,BP,ANC,ANFE,ANNU
      WRITE(21) CHP,CK0,CKALFA,CKBETA,CKGUMA
      CLOSE(21)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY SAVED TO THE FILE.'

      OPEN(16,POSITION='APPEND',FILE=KFNLOG)
C      OPEN(16,ACCESS='APPEND',FILE=KFNLOG)
C
         CALL GUDATE(NDY,NDM,NDD,NTH1,NTM1,NTS1)
         WRITE(K1,'(I3)') 100+NDY
         WRITE(K2,'(I3)') 100+NDM
         WRITE(K3,'(I3)') 100+NDD
         WRITE(K4,'(I3)') 100+NTH1
         WRITE(K5,'(I3)') 100+NTM1
         WRITE(K6,'(I3)') 100+NTS1
         WRITE(16,1670) K1(2:3),K2(2:3),K3(2:3),K4(2:3),K5(2:3),K6(2:3),
     &                  TRFNAM,
     &                  RIPS,RIPE,PN(1),PN(2),BB,PICTOT,PLHTOT,PLHNPR
 1670    FORMAT(' '/
     &          ' ','## DATE: ',
     &              A2,'-',A2,'-',A2,'  ',A2,':',A2,':',A2,' : ',
     &              '  FILE: ',A40/
     &          ' ',3X,'RIPS  =',1PD10.3,'  RIPE  =',1PD10.3,
     &               '  PNE   =',1PD10.3,'  PNI   =',1PD10.3/
     &          ' ',3X,'BB    =',1PD10.3,'  PICTOT=',1PD10.3,
     &               '  PLHTOT=',1PD10.3,'  PLHNPR=',1PD10.3)
         WRITE(16,1671) T,
     &                WPT,TAUE1,TAUE2,TAUEP,
     &                BETAP0,BETAPA,BETA0,BETAA
 1671    FORMAT(' ','# TIME : ',F7.3,' SEC'/
     &          ' ',3X,'WPT   =',1PD10.3,'  TAUE  =',1PD10.3,
     &               '  TAUED =',1PD10.3,'  TAUEP =',1PD10.3/
     &          ' ',3X,'BETAP0=',1PD10.3,'  BETAPA=',1PD10.3,
     &               '  BETA0 =',1PD10.3,'  BETAA =',1PD10.3)
C
         WRITE(16,1672) WST(1),TS0(1),TSAV(1),ANSAV(1),
     &                WST(2),TS0(2),TSAV(2),ANSAV(2)
 1672    FORMAT(' ',3X,'WE    =',1PD10.3,'  TE0   =',1PD10.3,
     &               '  TEAVE =',1PD10.3,'  NEAVE =',1PD10.3/
     &          ' ',3X,'WD    =',1PD10.3,'  TD0   =',1PD10.3,
     &               '  TDAVE =',1PD10.3,'  NDAVE =',1PD10.3)
C
         WRITE(16,1673) AJT,VLOOP,ALI,Q0,
     &                AJOHT,AJNBT,AJRFT,AJBST
 1673    FORMAT(' ',3X,'AJT   =',1PD10.3,'  VLOOP =',1PD10.3,
     &               '  ALI   =',1PD10.3,'  Q0    =',1PD10.3/
     &          ' ',3X,'AJOHT =',1PD10.3,'  AJNBT =',1PD10.3,
     &               '  AJRFT =',1PD10.3,'  AJBST =',1PD10.3)
C
         WRITE(16,1674) PINT,POHT,PNBT,
     &                PRFT(1)+PRFT(2)+PRFT(3)+PRFT(4),
     &                POUT,PRLT,PCXT,PIET
 1674    FORMAT(' ',3X,'PINT  =',1PD10.3,'  POHT  =',1PD10.3,
     &               '  PNBT  =',1PD10.3,'  PRFT  =',1PD10.3/
     &          ' ',3X,'POUT  =',1PD10.3,'  PRLT  =',1PD10.3,
     &               '  PCXT  =',1PD10.3,'  PIETE =',1PD10.3)
C
      CLOSE(16)
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           LOAD TRANSPORT DATA
C
C     ***********************************************************
C
      SUBROUTINE TRLOAD
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFNAM*32
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : LOAD FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFNAM
      IF(TRFNAM.EQ.'                                ') GOTO 900
      INQUIRE(FILE=TRFNAM,EXIST=LEX)
      IF(LEX) THEN
         OPEN(21,FILE=TRFNAM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFNAM,') IS ASSIGNED FOR INPUT.'
         GOTO 30
   10    WRITE(6,*) 'XX OLD FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 1
      ELSE
         WRITE(6,*) 'XX FILE (',TRFNAM,') NOT FOUND'
         GOTO 1
      ENDIF
C
   30 READ(21) NRMAX,DT,NGPST,TSST
      READ(21) RR,RA,RKAP,BB,RIPS,RIPE
      READ(21) PA,PZ,PN,PNS,PT,PTS
      READ(21) PNC,PNFE,PNNU,PNNUS
      READ(21) PROFN1,PROFN2,PROFT1,PROFT2,PROFU1,PROFU2,PROFJ1,PROFJ2,
     &         ALP,AD0,CNC,CDW,MDLKAI,MDLETA,MDLAD,MDLAVK
      READ(21) TPRST,MDLST,MDLNF,IZERO
      READ(21) PNBTOT,PNBR0,PNBRW,PNBENG,PNBRTG,MDLNB
      READ(21) PECTOT,PECR0,PECRW,PECTOE,PECNPR,MDLEC
      READ(21) PLHTOT,PLHR0,PLHRW,PLHTOE,PLHNPR,MDLLH
      READ(21) PICTOT,PICR0,PICRW,PICTOE,PICNPR,MDLIC
      READ(21) PNBCD,PECCD,PLHCD,PICCD,PBSCD,MDLCD
      READ(21) PELTOT,PELR0,PELRW,PELRAD,PELVEL,PELTIM,PELPAT,MDLPEL
      READ(21) DR,FKAP,PNSS,T,TST,VSEC,WPPRE,TPRE
      READ(21) RG,RM,RN,RT,RW,BP,ANC,ANFE,ANNU
      READ(21) CHP,CK0,CKALFA,CKBETA,CKGUMA
      CLOSE(21)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY LOADED FROM THE FILE.'
C
      NGR=0
      NGT=0
      NGST=0
      RIPS=RIPE
      GRG(1)=0.0
      DO 800 NR=1,NRMAX
         GRM(NR)  =GCLIP(RM(NR))
         GRG(NR+1)=GCLIP(RG(NR))
         QP(NR)  = RKAPS*RA*RG(NR)*BB/(RR*BP(NR))
  800 CONTINUE
      Q0  = (4.D0*QP(1) -QP(2) )/3.D0
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           SAVE GRAPHIC DATA
C
C     ***********************************************************
C
      SUBROUTINE TRGRSV
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFLNM*32
C      CHARACTER KID*1
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : GRAPHIC SAVE FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFLNM
      IF(TRFLNM.EQ.'                                ') GOTO 900
      INQUIRE (FILE=TRFLNM,EXIST=LEX)
      IF(LEX) THEN
C         WRITE(6,*) '# OLD FILE IS GOING TO BE OVERWRITTEN.  ',
C     &              'ARE YOU SURE {Y/N}?'
C         READ(5,'(A1)',ERR=1,END=900) KID
C         CALL GUCPTL(KID)
C         IF(KID.NE.'Y') GOTO 1
         OPEN(22,FILE=TRFLNM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFLNM,') IS ASSIGNED FOR OUTPUT.'
         GOTO 30
   10    WRITE(6,*) '# XX OLD FILE OPEN ERROR : IOSTAT=',IST
         GOTO 1
      ELSE
         OPEN(22,FILE=TRFLNM,IOSTAT=IST,STATUS='NEW',ERR=20,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# NEW FILE (',TRFLNM,') IS CREATED FOR OUTPUT.'
         GOTO 30
   20    WRITE(6,*) 'XX NEW FILE OPEN ERROR : IOSTAT=',IST
         GOTO 1
      ENDIF
C
   30 WRITE(22) GVR,GRM,GRG,GTR,NGR
      WRITE(22) GVT,GT,NGT
      CLOSE(22)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY SAVED TO THE FILE.'
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           LOAD GRAPHIC DATA
C
C     ***********************************************************
C
      SUBROUTINE TRGRLD
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFLNM*32
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : GRAPHIC LOAD FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFLNM
      IF(TRFLNM.EQ.'                                ') GOTO 900
      INQUIRE (FILE=TRFLNM,EXIST=LEX)
      IF(LEX) THEN
         OPEN(22,FILE=TRFLNM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFLNM,') IS ASSIGNED FOR INPUT.'
         GOTO 30
   10    WRITE(6,*) '# XX OLD FILE OPEN ERROR : IOSTAT=',IST
         GOTO 1
      ELSE
         WRITE(6,*) 'XX FILE (',TRFLNM,') NOT FOUND'
         GOTO 1
      ENDIF
   30 READ(22) GVR,GRM,GRG,GTR,NGR
      READ(22) GVT,GT,NGT
      CLOSE(22)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY LOADED FROM THE FILE.'
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           TIME EVOLUTIONAL UFILE DATA INPUT ROUTINE
C
C     ***********************************************************
C
      SUBROUTINE TR_TIME_UFILE
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION UQPTU(4,4,NRMU,NTURM)
      DIMENSION UQNBETU(4,4,NRMU,NTURM),UQNBITU(4,4,NRMU,NTURM)
      DIMENSION UQICETU(4,4,NRMU,NTURM),UQICITU(4,4,NRMU,NTURM)
      DIMENSION UQECTU(4,4,NRMU,NTURM), UQRLTU(4,4,NRMU,NTURM)
      DIMENSION UVOLTU(4,4,NRMU,NTURM)
      DIMENSION URMJTU(4,4,NRMU,NTURM) ,URMNTU(4,4,NRMU,NTURM)
      DIMENSION UGR1TU(4,4,NRMU,NTURM) ,UGR2TU(4,4,NRMU,NTURM)
      DIMENSION UTETU(4,4,NRMU,NTURM)  ,UTITU(4,4,NRMU,NTURM)
      DIMENSION UNETU(4,4,NRMU,NTURM)
      DIMENSION URRTU(4,NTURM)         ,URATU(4,NTURM)
      DIMENSION UIPTU(4,NTURM)         ,UBTTU(4,NTURM)
      DIMENSION UKAPTU(4,NTURM)
      CHARACTER KFILE*20
C
      DR = 1.D0/DBLE(NRMAX)
      ICK=0
      TMUMAX=0.D0
C
C     *** 1D VALUE ***
C
      KFILE='RGEO'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,URRTU,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,URRTU,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF RGEO: IERR=",IERR
         RRU(NTA)=F0
      ENDDO
C
      KFILE='AMIN'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,URATU,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,URATU,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF AMIN: IERR=",IERR
         RAU(NTA)=F0
      ENDDO
C
      KFILE='IP'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UIPTU,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UIPTU,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF IP: IERR=",IERR
         RIPU(NTA)=ABS(F0*1.D-6)
      ENDDO
C
      KFILE='BT'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UBTTU,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UBTTU,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF BT: IERR=",IERR
         BBU(NTA)=ABS(F0)
      ENDDO
C
      KFILE='KAPPA'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UKAPTU,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UKAPTU,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF KAPPA: IERR=",IERR
         RKAPU(NTA)=F0
      ENDDO
C
C     *** 2D VALUE ***
      KFILE='TE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UTETU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UTETU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE1: IERR=",IERR
            RTU(NR,1,NTA)=F0*1.D-3
         ENDDO
      ENDDO
      DO NR=1,NRMAX
         RT(NR,1)=RTU(NR,1,1)
      ENDDO
      PT(1) = RT(1,1)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         RGN=DBLE(NRMAX)*DR
         CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UTETU,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE2: IERR=",IERR
         PTSU(1,NTA)=F0*1.D-3
      ENDDO
      PTS(1)=PTSU(1,1)
C
      KFILE='TI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UTITU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UTITU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TI1: IERR=",IERR
            RTU(NR,2,NTA)=F0*1.D-3
         ENDDO
      ENDDO
      DO NR=1,NRMAX
         RT(NR,2)=RTU(NR,2,1)
      ENDDO
      PT(2) =RT(1,2)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         RGN=DBLE(NRMAX)*DR
         CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UTITU,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE2: IERR=",IERR
         PTSU(2,NTA)=F0*1.D-3
      ENDDO
      PTS(2)=PTSU(2,1)
C
      KFILE='NE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UNETU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UNETU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF NE1: IERR=",IERR
            RNU(NR,1,NTA)=F0*1.D-20
            RNU(NR,2,NTA)=F0*1.D-20
         ENDDO
      ENDDO
      PN(1)=RNU(1,1,1)
      PN(2)=RNU(1,2,1)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         RGN=DBLE(NRMAX)*DR
         CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UNETU,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF NE1: IERR=",IERR
         PNSU(1,NTA)=F0*1.D-20
         PNSU(2,NTA)=F0*1.D-20
      ENDDO
      PNS(1)=PNSU(1,1)
      PNS(2)=PNSU(2,1)
C
      KFILE='Q'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQPTU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RGN=DBLE(NR)*DR
            CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UQPTU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF Q: IERR=",IERR
            QPU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='QNBIE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQNBETU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UQNBETU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QNBIE: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PNBU(NR,1,NTA)=0.D0
            ELSE
               PNBU(NR,1,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QNBII'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQNBITU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UQNBITU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QNBII: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PNBU(NR,2,NTA)=0.D0
            ELSE
               PNBU(NR,2,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      DO NTA=1,NTAMAX
         DO NR=1,NRMAX
            PICU(NR,1,NTA)=0.D0
            PICU(NR,2,NTA)=0.D0
            PECU(NR,  NTA)=0.D0
         ENDDO
      ENDDO
      KFILE='QICRHE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQICETU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UQICETU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(F0.LT.0.D0) THEN
               PICU(NR,1,NTA)=0.D0
            ELSE
               PICU(NR,1,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QICRHI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQICITU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UQICITU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QICRHI: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PICU(NR,2,NTA)=0.D0
            ELSE
               PICU(NR,2,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QECH'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQICITU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UQECTU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QICRHI: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PECU(NR,NTA)=0.D0
            ELSE
               PECU(NR,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QRAD'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UQRLTU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UQRLTU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QRAD: IERR=",IERR
            PRLU(NR,NTA)=F0
         ENDDO
      ENDDO
C
C     *** GEOMETORY FACTORS ***
C
      KFILE='VOLUME'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UVOLTU,NRFMAX,NTXMAX,TMUMAX,ICK,1,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DD(RMN,TMLCL,F0,DFX0,DFY0,RUF,TMU,UVOLTU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF VOLUME: IERR=",IERR
            DVRHOU(NR,NTA)=DFX0
         ENDDO
      ENDDO
C
      KFILE='RMAJOR'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,URMJTU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,URMJTU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF RMAJOR: IERR=",IERR
            RMJRHOU(NR,NTA)=F0
            ARRHOU(NR,NTA)=1.D0/RMJRHOU(NR,NTA)**2
            TTRHOU(NR,NTA)=BB*RMJRHOU(NR,NTA)
            DSRHOU(NR,NTA)=DVRHOU(NR,NTA)/(2.D0*PI*RMJRHOU(NR,NTA))
         ENDDO
      ENDDO
C
      KFILE='RMINOR'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,URMNTU,NRFMAX,NTXMAX,TMUMAX,ICK,1,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,URMNTU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF RMINOR: IERR=",IERR
            RMNRHOU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='GRHO1'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UGR1TU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UGR1TU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF GRHO1: IERR=",IERR
            AR1RHOU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='GRHO2'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UGR2TU,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UGR2TU,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF GRHO2: IERR=",IERR
            AR2RHOU(NR,NTA)=F0
            ABRHOU(NR,NTA)=AR2RHOU(NR,NTA)*ARRHOU(NR,NTA)
         ENDDO
      ENDDO
C
      RETURN
      END
C
C
C     ***********************************************************
C
C           PRETREATMENT SUBROUTINE FOR TR_TIME_UFILE
C
C     ***********************************************************
C
      SUBROUTINE PRETREATMENT1(KFILE,U,NTXMAX,TMUMAX,ICK,IERR)
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION DERIV(NTURM)
      DIMENSION U(4,NTURM)
      CHARACTER KFILE*20
C
      IF(IERR.EQ.1) THEN
         STOP 'XX NECESSARY FILE CANNOT BE FOUND!'
      ENDIF

      DERIV(1)=0.D0
      DERIV(NTXMAX)=0.D0
C
      DO NTX=2,NTXMAX
         TMU(NTX)=(TMU(NTX)-TMU(1))
      ENDDO
      TMU(1)=0.D0
      IF(ICK.NE.0) THEN
         IF(ICK.EQ.2.AND.TMUMAX.EQ.0.D0) GOTO 1000
         IF(TMUMAX.NE.TMU(NTXMAX)) THEN
            WRITE(6,*) 'XX TRFILE:',KFILE,'UFILE HAS AN ERROR!'
            WRITE(6,*) TMUMAX,TMU(NTXMAX)
            STOP
         ENDIF
      ENDIF
 1000 CONTINUE
      TMUMAX=TMU(NTXMAX)
      NTAMAX=INT(DINT(TMU(NTXMAX)*1.D2)*1.D-2/DT)
      IF(ICK.NE.2) ICK=1
C
      CALL SPL1D(TMU,F1,DERIV,U,NTXMAX,3,IERR)
      IF(IERR.NE.0) WRITE(6,*) 'XX TRFILE: SPL1D',KFILE,': IERR=',IERR
C
      RETURN
      END
C
C     *****
C
      SUBROUTINE PRETREATMENT2(KFILE,U,NRFMAX,NTXMAX,TMUMAX,
     &                         ICK,MODE,IERR)
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION DERIVX(NRMU,NTURM),DERIVY(NRMU,NTURM)
      DIMENSION DERIVXY(NRMU,NTURM)
      DIMENSION U(4,4,NRMU,NTURM)
      CHARACTER KFILE*20
C
      IF(IERR.EQ.1) THEN
         IERR=0
         RETURN
      ENDIF
C
      DO NTX=1,NTXMAX
         DERIVX(1,NTX)=0.D0
      ENDDO
      DERIVXY(1,     1)=0.D0
      DERIVXY(1,NTXMAX)=0.D0
C
      DO NTX=2,NTXMAX
         TMU(NTX)=(TMU(NTX)-TMU(1))
      ENDDO
      TMU(1)=0.D0
      IF(ICK.NE.0) THEN
         IF(TMUMAX.NE.TMU(NTXMAX)) THEN
            WRITE(6,*) 'XX TRFILE:',KFILE,'UFILE HAS AN ERROR!'
            WRITE(6,*) TMUMAX,TMU(NTXMAX)
            STOP
         ENDIF
      ENDIF
      TMUMAX=TMU(NTXMAX)
      NTAMAX=INT(DINT(TMU(NTXMAX)*1.D2)*1.D-2/DT)
C
      IF(MODE.EQ.0) THEN
         CALL SPL2D(RUF,TMU,F2,DERIVX,DERIVY,DERIVXY,U,
     &              NRMU,NRFMAX,NTXMAX,1,0,IERR)
      ELSE
         CALL SPL2D(RUF,TMU,F2,DERIVX,DERIVY,DERIVXY,U,
     &              NRMU,NRFMAX,NTXMAX,0,0,IERR)
      ENDIF
      IF(IERR.NE.0) WRITE(6,*) 'XX TRFILE: SPL2D',KFILE,': IERR=',IERR
      ICK=1
c$$$C
c$$$      TMLCL=DT*DBLE(4)
c$$$      DO NR=1,NRMAX
c$$$         RMN=(DBLE(NR)-0.5D0)*DR
c$$$         CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,U,
c$$$     &                  NRMU,NRFMAX,NTXMAX,IERR)
c$$$         write(6,*) NR,F0*1.D-3
c$$$      ENDDO
C
      RETURN
      END
C
C
C     ***********************************************************
C
C           READING DATA FROM UFILES WITH NT INCREMENT
C
C     ***********************************************************
C
      SUBROUTINE TR_UFREAD
C
      INCLUDE 'trcomm.h'
C
      RKAP=RKAPU(NT)
      RKAPS=SQRT(RKAP)
C
      RR=RRU(NT)
      RA=RAU(NT)
      BB=BBU(NT)
C
      DO NR=1,NRMAX
         RN(NR,1)=RNU(NR,1,NT)
         RN(NR,2)=RNU(NR,2,NT)
         QP(NR)=QPU(NR,NT)
         BP(NR)=RKAPS*RA*RG(NR)*BB/(RR*QP(NR))
         PEX(NR,1)=PNBU(NR,1,NT)
         PEX(NR,2)=PNBU(NR,2,NT)
         PRF(NR,1)=PICU(NR,1,NT)+PECU(NR,NT)
         PRF(NR,2)=PICU(NR,2,NT)
         TTRHO(NR)=TTRHOU(NR,NT)
         DVRHO(NR)=DVRHOU(NR,NT)
         DSRHO(NR)=DSRHOU(NR,NT)
         ABRHO(NR)=ABRHOU(NR,NT)
         ARRHO(NR)=ARRHOU(NR,NT)
         AR1RHO(NR)=AR1RHOU(NR,NT)
         AR2RHO(NR)=AR2RHOU(NR,NT)
         RMJRHO(NR)=RMJRHOU(NR,NT)
         RMNRHO(NR)=RMNRHOU(NR,NT)
         EKAPPA(NR)=RKAP
      ENDDO
C      Q0  = (4.D0*QP(1) -QP(2) )/3.D0
      CALL TRARRG
C
      PNS(1)=PNSU(1,NT)
      PNS(2)=PNSU(2,NT)      
      PTS(1)=PTSU(1,NT)
      PTS(2)=PTSU(2,NT)
C
C     *** CALCULATE PZC,PZFE ***
C
      CALL TRZEFF
C
C     *** CALCULATE ANEAVE ***
C
      ANESUM=0.D0
      DO NR=1,NRMAX
         ANESUM=ANESUM+RN(NR,1)*RM(NR)
      ENDDO 
      ANEAVE=ANESUM*2.D0*DR
C
C     *** CALCULATE IMPURITY DENSITY
C                ACCORDING TO ITER PHYSICS DESIGN GUIDELINE ***
C
      DO NR=1,NRMAX
         ANC (NR)= (0.9D0+0.60D0*(0.7D0/ANEAVE)**2.6D0)*PNC
     &            *1.D-2*RN(NR,1)
         ANFE(NR)= (0.0D0+0.05D0*(0.7D0/ANEAVE)**2.3D0)*PNFE
     &            *1.D-2*RN(NR,1)
         ANI = 0.D0
         DO NS=2,NSM
            ANI=ANI+PZ(NS)*RN(NR,NS)
         ENDDO
         ANZ = PZFE(NR)*ANFE(NR)+PZC(NR)*ANC(NR)
         DILUTE = 1.D0-ANZ/ANI
         DO NS=2,NSM
            RN(NR,NS) = RN(NR,NS)*DILUTE
         ENDDO
      ENDDO
      PNSS(1)=PNS(1)
      DO NS=2,NSM
         PNSS(NS)=PNS(NS)*DILUTE
      ENDDO
      PNSS(7)=PNS(7)
      PNSS(8)=PNS(8)
C
      RETURN
      END
C
C   **************************************************
C   **    UFILE read for TR (Time Ecolution UFILE)  **
C   **************************************************
C
C     input:
C
C     KFID     : UFILE exsisting directory
C
C     output:
C
C     RUF(NRMU)      : Equally Spaced Normalized Radial Data
C     TMU(NTURM)     : Total Time Data (The Number of DT)
C     F1(NTURM)      : Functional Values
C     F2(NRMU,NTURM) : Functional Values
C     NRFMAX         : Maximum Number of the Radial Mesh
C     NTXMAX         : Maximum Number of the Time Mesh
C     MDCHK          : Loop Check Value
C     IERR           : Error Indicator
C
C   ***************************************************************
C
      SUBROUTINE UFREAD_TIME(KFID,TT,F1,NTXMAX,MDCHK,IERR)
C
      INCLUDE 'trcomm.h'
      DIMENSION TT(NTURM),F1(NTURM)
      COMMON /TRUFL1/ KUFDEV,KUFDCG
      CHARACTER KDIRR1*80
      CHARACTER KDIRX*80
      CHARACTER KFILE*80,KFID*20
      LOGICAL LEX
C
C      IF(MDCHK.NE.0) GOTO 9000
C
      CALL KTRIM(KUFDEV,IKNDEV)
      CALL KTRIM(KUFDCG,IKNDCG)
C
      KDIRX='../../tr.new/data/'//KUFDEV(1:IKNDEV)//'/'
     &                          //KUFDCG(1:IKNDCG)//'/in/'
      CALL KTRIM(KDIRX,IKDIRX)
      KDIRR1=KDIRX(1:IKDIRX)//KUFDEV(1:IKNDEV)
     &       //'1d'//KUFDCG(1:IKNDCG)//'.'
C
      CALL KTRIM(KDIRR1,KL1)
      KFILE=KDIRR1(1:KL1)//KFID
C
      INQUIRE(FILE=KFILE,EXIST=LEX,ERR=9000)
C
      IF(LEX) THEN
         CALL TRXR1D(KDIRR1,KFID,TT,F1,NTURM,NTXMAX,0)
         MDCHK=1
         IERR=0
      ELSE
         DO NT=1,NTURM
            F1(NT)=0.D0
         ENDDO
         IERR=1
      ENDIF
C
 9000 RETURN
      END
C
C     *****
C
      SUBROUTINE UFREAD2_TIME(KFID,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
C
      INCLUDE 'trcomm.h'
      DIMENSION RUF(NRMU),TMU(NTURM),F2(NRMU,NTURM)
      DIMENSION F2CTR(NTURM),F2EDG(NTURM)
      COMMON /TRUFL1/ KUFDEV,KUFDCG
      CHARACTER KDIRR2*80
      CHARACTER KDIRX*80
      CHARACTER KFILE*80,KFID*20
      LOGICAL LEX
C
C      IF(MDCHK.NE.0) GOTO 9000
C
      CALL KTRIM(KUFDEV,IKNDEV)
      CALL KTRIM(KUFDCG,IKNDCG)
C
      KDIRX='../../tr.new/data/'//KUFDEV(1:IKNDEV)//'/'
     &                          //KUFDCG(1:IKNDCG)//'/in/'
      CALL KTRIM(KDIRX,IKDIRX)
      KDIRR2=KDIRX(1:IKDIRX)//KUFDEV(1:IKNDEV)
     &       //'2d'//KUFDCG(1:IKNDCG)//'.'
C
      CALL KTRIM(KDIRR2,KL2)
      KFILE=KDIRR2(1:KL2)//KFID
C
      INQUIRE(FILE=KFILE,EXIST=LEX,ERR=9000)
      IF(LEX) THEN
         NRFMAX=52              ! equal to NRMU
         CALL TRXR2D(KDIRR2,KFID,TMU,RUF,F2,NRMU,NTURM,NRFMAX,NTXMAX,0)
         MDCHK=1
         IERR=0
      ELSE
         DO NTA=1,NTURM
            DO NRF=1,NRMU
               F2(NRF,NTA)=0.D0
            ENDDO
         ENDDO
         IERR=1
         GOTO 9000
      ENDIF
C     
      MD=0
      IF(RUF(1).NE.0.D0.AND.RUF(NRFMAX).NE.1.D0) THEN
         DO NTX=1,NTXMAX
            F2CTR(NTX)=FCTR(RUF(1),RUF(2),F2(1,NTX),F2(2,NTX))
            F2EDG(NTX)=FEDG(1.D0,RUF(NRFMAX-1),RUF(NRFMAX),
     &                      F2(NRFMAX-1,NTX),F2(NRFMAX,NTX))
         ENDDO
         MD=1
      ELSEIF(RUF(1).NE.0.D0.AND.RUF(NRFMAX).EQ.1.D0) THEN
         DO NTX=1,NTXMAX
            F2CTR(NTX)=FCTR(RUF(1),RUF(2),F2(1,NTX),F2(2,NTX))
         ENDDO
         MD=2
      ELSEIF(RUF(1).EQ.0.D0.AND.RUF(NRFMAX).EQ.1.D0) THEN
         MD=3
      ELSE
         STOP 'XX TRFILE: TRXR2D: ERROR'
      ENDIF
C
      IF(MD.EQ.1) THEN
         NRFMAX=NRFMAX+2
         DO NRF=NRFMAX-1,2,-1
            RUF(NRF)=RUF(NRF-1)
         ENDDO
         RUF(1)=0.D0
         RUF(NRFMAX)=1.D0
         DO NTX=1,NTXMAX
            DO NRF=NRFMAX-1,2,-1
               F2(NRF,NTX)=F2(NRF-1,NTX)
            ENDDO
            F2(1,NTX)=F2CTR(NTX)
            F2(NRFMAX,NTX)=F2EDG(NTX)
         ENDDO
      ELSEIF(MD.EQ.2) THEN
         NRFMAX=NRFMAX+1
         DO NRF=NRFMAX,2,-1
            RUF(NRF)=RUF(NRF-1)
         ENDDO
         RUF(1)=0.D0
         DO NTX=1,NTXMAX
            DO NRF=NRFMAX,2,-1
               F2(NRF,NTX)=F2(NRF-1,NTX)
            ENDDO
            F2(1,NTX)=F2CTR(NTX)
         ENDDO
      ENDIF
C
 9000 RETURN
      END
C
C     *****
C
      FUNCTION FCTR(R1,R2,F1,F2)
C
      IMPLICIT REAL*8 (A-F,H,O-Z)
C
      FCTR = (R2**2*F1-R1**2*F2)/(R2**2-R1**2)
C
      RETURN
      END
C
      FUNCTION FEDG(R0,R1,R2,F1,F2)
C
      IMPLICIT REAL*8 (A-F,H,O-Z)
C
      FEDG = ((R2-R0)*F1-(R1-R0)*F2)/(R2-R1)
C
      RETURN
      END

