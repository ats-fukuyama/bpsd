C     $Id$
C
C     ***********************************************************
C
C           SAVE TRANSPORT DATA
C
C     ***********************************************************
C
      SUBROUTINE TRSAVE
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFNAM*32
C      CHARACTER KID*1
      CHARACTER K1*3,K2*3,K3*3,K4*3,K5*3,K6*3
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : SAVE FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFNAM
      IF(TRFNAM.EQ.'                                ') GOTO 900
      INQUIRE(FILE=TRFNAM,EXIST=LEX)
      IF(LEX) THEN
C         WRITE(6,*) '# OLD FILE IS GOING TO BE OVERWRITTEN.  ',
C     &              'ARE YOU SURE {Y/N} ?'
C         READ(5,'(A1)',ERR=1,END=900) KID
C         CALL GUCPTL(KID)
C         IF(KID.NE.'Y') GOTO 1
         OPEN(21,FILE=TRFNAM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFNAM,') IS ASSIGNED FOR OUTPUT.'
         GOTO 30
   10    WRITE(6,*) 'XX OLD FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 1
      ELSE
         OPEN(21,FILE=TRFNAM,IOSTAT=IST,STATUS='NEW',ERR=20,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# NEW FILE (',TRFNAM,') IS CREATED FOR OUTPUT.'
         GOTO 30
   20    WRITE(6,*) 'XX NEW FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 1
      ENDIF
C
   30 WRITE(21) NRMAX,DT,NGPST,TSST
      WRITE(21) RR,RA,RKAP,BB,RIPS,RIPE
      WRITE(21) PA,PZ,PN,PNS,PT,PTS
      WRITE(21) PNC,PNFE,PNNU,PNNUS
      WRITE(21) PROFN1,PROFN2,PROFT1,PROFT2,PROFU1,PROFU2,PROFJ1,PROFJ2,
     &          ALP,AD0,CNC,CDW,MDLKAI,MDLETA,MDLAD,MDLAVK
      WRITE(21) TPRST,MDLST,MDLNF,IZERO
      WRITE(21) PNBTOT,PNBR0,PNBRW,PNBENG,PNBRTG,MDLNB
      WRITE(21) PECTOT,PECR0,PECRW,PECTOE,PECNPR,MDLEC
      WRITE(21) PLHTOT,PLHR0,PLHRW,PLHTOE,PLHNPR,MDLLH
      WRITE(21) PICTOT,PICR0,PICRW,PICTOE,PICNPR,MDLIC
      WRITE(21) PNBCD,PECCD,PLHCD,PICCD,PBSCD,MDLCD
      WRITE(21) PELTOT,PELR0,PELRW,PELRAD,PELVEL,PELTIM,PELPAT,MDLPEL
      WRITE(21) DR,FKAP,PNSS,T,TST,VSEC,WPPRE,TPRE
      WRITE(21) RG,RM,RN,RT,RW,BP,ANC,ANFE,ANNU
      WRITE(21) CHP,CK0,CKALFA,CKBETA,CKGUMA
      CLOSE(21)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY SAVED TO THE FILE.'

C      OPEN(16,POSITION='APPEND',FILE=KFNLOG)
      OPEN(16,ACCESS='APPEND',FILE=KFNLOG)
C
         CALL GUDATE(NDY,NDM,NDD,NTH1,NTM1,NTS1)
         WRITE(K1,'(I3)') 100+NDY
         WRITE(K2,'(I3)') 100+NDM
         WRITE(K3,'(I3)') 100+NDD
         WRITE(K4,'(I3)') 100+NTH1
         WRITE(K5,'(I3)') 100+NTM1
         WRITE(K6,'(I3)') 100+NTS1
         WRITE(16,1670) K1(2:3),K2(2:3),K3(2:3),K4(2:3),K5(2:3),K6(2:3),
     &                  TRFNAM,
     &                  RIPS,RIPE,PN(1),PN(2),BB,PICTOT,PLHTOT,PLHNPR
 1670    FORMAT(' '/
     &          ' ','## DATE: ',
     &              A2,'-',A2,'-',A2,'  ',A2,':',A2,':',A2,' : ',
     &              '  FILE: ',A40/
     &          ' ',3X,'RIPS  =',1PD10.3,'  RIPE  =',1PD10.3,
     &               '  PNE   =',1PD10.3,'  PNI   =',1PD10.3/
     &          ' ',3X,'BB    =',1PD10.3,'  PICTOT=',1PD10.3,
     &               '  PLHTOT=',1PD10.3,'  PLHNPR=',1PD10.3)
         WRITE(16,1671) T,
     &                WPT,TAUE1,TAUE2,TAUEP,
     &                BETAP0,BETAPA,BETA0,BETAA
 1671    FORMAT(' ','# TIME : ',F7.3,' SEC'/
     &          ' ',3X,'WPT   =',1PD10.3,'  TAUE  =',1PD10.3,
     &               '  TAUED =',1PD10.3,'  TAUEP =',1PD10.3/
     &          ' ',3X,'BETAP0=',1PD10.3,'  BETAPA=',1PD10.3,
     &               '  BETA0 =',1PD10.3,'  BETAA =',1PD10.3)
C
         WRITE(16,1672) WST(1),TS0(1),TSAV(1),ANSAV(1),
     &                WST(2),TS0(2),TSAV(2),ANSAV(2)
 1672    FORMAT(' ',3X,'WE    =',1PD10.3,'  TE0   =',1PD10.3,
     &               '  TEAVE =',1PD10.3,'  NEAVE =',1PD10.3/
     &          ' ',3X,'WD    =',1PD10.3,'  TD0   =',1PD10.3,
     &               '  TDAVE =',1PD10.3,'  NDAVE =',1PD10.3)
C
         WRITE(16,1673) AJT,VLOOP,ALI,Q0,
     &                AJOHT,AJNBT,AJRFT,AJBST
 1673    FORMAT(' ',3X,'AJT   =',1PD10.3,'  VLOOP =',1PD10.3,
     &               '  ALI   =',1PD10.3,'  Q0    =',1PD10.3/
     &          ' ',3X,'AJOHT =',1PD10.3,'  AJNBT =',1PD10.3,
     &               '  AJRFT =',1PD10.3,'  AJBST =',1PD10.3)
C
         WRITE(16,1674) PINT,POHT,PNBT,
     &                PRFT(1)+PRFT(2)+PRFT(3)+PRFT(4),
     &                POUT,PRLT,PCXT,PIET
 1674    FORMAT(' ',3X,'PINT  =',1PD10.3,'  POHT  =',1PD10.3,
     &               '  PNBT  =',1PD10.3,'  PRFT  =',1PD10.3/
     &          ' ',3X,'POUT  =',1PD10.3,'  PRLT  =',1PD10.3,
     &               '  PCXT  =',1PD10.3,'  PIETE =',1PD10.3)
C
      CLOSE(16)
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           LOAD TRANSPORT DATA
C
C     ***********************************************************
C
      SUBROUTINE TRLOAD
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFNAM*32
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : LOAD FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFNAM
      IF(TRFNAM.EQ.'                                ') GOTO 900
      INQUIRE(FILE=TRFNAM,EXIST=LEX)
      IF(LEX) THEN
         OPEN(21,FILE=TRFNAM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFNAM,') IS ASSIGNED FOR INPUT.'
         GOTO 30
   10    WRITE(6,*) 'XX OLD FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 1
      ELSE
         WRITE(6,*) 'XX FILE (',TRFNAM,') NOT FOUND'
         GOTO 1
      ENDIF
C
   30 READ(21) NRMAX,DT,NGPST,TSST
      READ(21) RR,RA,RKAP,BB,RIPS,RIPE
      READ(21) PA,PZ,PN,PNS,PT,PTS
      READ(21) PNC,PNFE,PNNU,PNNUS
      READ(21) PROFN1,PROFN2,PROFT1,PROFT2,PROFU1,PROFU2,PROFJ1,PROFJ2,
     &         ALP,AD0,CNC,CDW,MDLKAI,MDLETA,MDLAD,MDLAVK
      READ(21) TPRST,MDLST,MDLNF,IZERO
      READ(21) PNBTOT,PNBR0,PNBRW,PNBENG,PNBRTG,MDLNB
      READ(21) PECTOT,PECR0,PECRW,PECTOE,PECNPR,MDLEC
      READ(21) PLHTOT,PLHR0,PLHRW,PLHTOE,PLHNPR,MDLLH
      READ(21) PICTOT,PICR0,PICRW,PICTOE,PICNPR,MDLIC
      READ(21) PNBCD,PECCD,PLHCD,PICCD,PBSCD,MDLCD
      READ(21) PELTOT,PELR0,PELRW,PELRAD,PELVEL,PELTIM,PELPAT,MDLPEL
      READ(21) DR,FKAP,PNSS,T,TST,VSEC,WPPRE,TPRE
      READ(21) RG,RM,RN,RT,RW,BP,ANC,ANFE,ANNU
      READ(21) CHP,CK0,CKALFA,CKBETA,CKGUMA
      CLOSE(21)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY LOADED FROM THE FILE.'
C
      NGR=0
      NGT=0
      NGST=0
      RIPS=RIPE
      GRG(1)=0.0
      DO 800 NR=1,NRMAX
         GRM(NR)  =GCLIP(RM(NR))
         GRG(NR+1)=GCLIP(RG(NR))
         QP(NR)  = RKAPS*RA*RG(NR)*BB/(RR*BP(NR))
  800 CONTINUE
      Q0  = (4.D0*QP(1) -QP(2) )/3.D0
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           SAVE GRAPHIC DATA
C
C     ***********************************************************
C
      SUBROUTINE TRGRSV
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFLNM*32
C      CHARACTER KID*1
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : GRAPHIC SAVE FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFLNM
      IF(TRFLNM.EQ.'                                ') GOTO 900
      INQUIRE (FILE=TRFLNM,EXIST=LEX)
      IF(LEX) THEN
C         WRITE(6,*) '# OLD FILE IS GOING TO BE OVERWRITTEN.  ',
C     &              'ARE YOU SURE {Y/N}?'
C         READ(5,'(A1)',ERR=1,END=900) KID
C         CALL GUCPTL(KID)
C         IF(KID.NE.'Y') GOTO 1
         OPEN(22,FILE=TRFLNM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFLNM,') IS ASSIGNED FOR OUTPUT.'
         GOTO 30
   10    WRITE(6,*) '# XX OLD FILE OPEN ERROR : IOSTAT=',IST
         GOTO 1
      ELSE
         OPEN(22,FILE=TRFLNM,IOSTAT=IST,STATUS='NEW',ERR=20,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# NEW FILE (',TRFLNM,') IS CREATED FOR OUTPUT.'
         GOTO 30
   20    WRITE(6,*) 'XX NEW FILE OPEN ERROR : IOSTAT=',IST
         GOTO 1
      ENDIF
C
   30 WRITE(22) GVR,GRM,GRG,GTR,NGR
      WRITE(22) GVT,GT,NGT
      CLOSE(22)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY SAVED TO THE FILE.'
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           LOAD GRAPHIC DATA
C
C     ***********************************************************
C
      SUBROUTINE TRGRLD
C
      INCLUDE 'trcomm.h'
C
      CHARACTER TRFLNM*32
      LOGICAL LEX
C
    1 WRITE(6,*) '# INPUT : GRAPHIC LOAD FILE NAME (CR TO CANCEL)'
      READ(5,'(A32)',ERR=1,END=900) TRFLNM
      IF(TRFLNM.EQ.'                                ') GOTO 900
      INQUIRE (FILE=TRFLNM,EXIST=LEX)
      IF(LEX) THEN
         OPEN(22,FILE=TRFLNM,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',TRFLNM,') IS ASSIGNED FOR INPUT.'
         GOTO 30
   10    WRITE(6,*) '# XX OLD FILE OPEN ERROR : IOSTAT=',IST
         GOTO 1
      ELSE
         WRITE(6,*) 'XX FILE (',TRFLNM,') NOT FOUND'
         GOTO 1
      ENDIF
   30 READ(22) GVR,GRM,GRG,GTR,NGR
      READ(22) GVT,GT,NGT
      CLOSE(22)
C
      WRITE(6,*) '# DATA WAS SUCCESSFULLY LOADED FROM THE FILE.'
C
  900 RETURN
      END
C
C     ***********************************************************
C
C           STEADY STATE UFILE DATA INPUT ROUTINE
C
C     ***********************************************************
C
      SUBROUTINE TR_STEADY_UFILE
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      DIMENSION UPRE0(4,NRMU)
      DIMENSION TMUS(NTURM)
      CHARACTER KFILE*20
C
      NRAMAX=INT(RHOA*NRMAX)
      DR = 1.D0/DBLE(NRMAX)
C
      MDRGEO=0
      MDAMIN=0
      MDIP=0
      MDBT=0
      MDKAPPA=0
C
C     *** 1D VALUE ***
C
      KFILE='RGEO'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      IF(IERR.EQ.1.AND.KUFDEV.EQ.'jt60u') THEN
         MDRGEO=IERR
         IERR=0
      ELSE
         DO NTX=1,NTXMAX
            RRU(NTX)=F1(NTX)
         ENDDO
      ENDIF
C
      KFILE='AMIN'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      IF(IERR.EQ.1.AND.KUFDEV.EQ.'jt60u') THEN
         MDAMIN=IERR
         IERR=0
      ELSE
         DO NTX=1,NTXMAX
            RAU(NTX)=F1(NTX)
         ENDDO
      ENDIF
C
      KFILE='IP'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      IF(IERR.EQ.1.AND.KUFDEV.EQ.'jt60u') THEN
         MDIP=IERR
         IERR=0
      ELSE
         DO NTX=1,NTXMAX
            RIPU(NTX)=ABS(F1(NTX)*1.D-6)
         ENDDO
      ENDIF
C
      KFILE='BT'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      IF(IERR.EQ.1.AND.KUFDEV.EQ.'jt60u') THEN
         MDBT=IERR
         IERR=0
      ELSE
         DO NTX=1,NTXMAX
            BBU(NTX)=ABS(F1(NTX))
         ENDDO
      ENDIF
C
      KFILE='KAPPA'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      IF(IERR.EQ.1.AND.KUFDEV.EQ.'jt60u') THEN
         MDKAPPA=IERR
         IERR=0
      ELSE
         DO NTX=1,NTXMAX
            RKAPU(NTX)=F1(NTX)
         ENDDO
      ENDIF
C
      IF(IERR.NE.0) STOP 'SOME 1D UFILES DO NOT EXIST.'
      DO NTX=1,NTXMAX
         TMUS(NTX)=TMU(NTX)
      ENDDO
      NTXSMAX=NTXMAX
C
C     *** 2D VALUE ***
C
      KFILE='TE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF TE1: IERR=",IERR
         RTU(NR,1,1)=F0*1.D-3
      ENDDO
      DO NR=1,NRMAX
         RT(NR,1)=RTU(NR,1,1)
      ENDDO
      PT(1) = RT(1,1)
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      CALL SPL1DF(RGN,F0,RUF,UPRE0,NRFMAX,IERR)
      IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF TE2: IERR=",IERR
      PTS(1)=F0*1.D-3
C
      KFILE='TI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF TE1: IERR=",IERR
         RTU(NR,2,1)=F0*1.D-3
      ENDDO
      DO NR=1,NRMAX
         RT(NR,2)=RTU(NR,2,1)
      ENDDO
      PT(2) = RT(1,2)
      PT(3) = RT(1,2)
      PT(4) = RT(1,2)
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      CALL SPL1DF(RGN,F0,RUF,UPRE0,NRFMAX,IERR)
      IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF TE2: IERR=",IERR
      PTS(2)=F0*1.D-3
      PTS(3)=F0*1.D-3
      PTS(4)=F0*1.D-3
C
      KFILE='NE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF NE1: IERR=",IERR
         RNU(NR,1,1)=F0*1.D-20
         RNU(NR,2,1)=F0*1.D-20
      ENDDO
      PN(1)=RNU(1,1,1)
      PN(2)=RNU(1,2,1)-2.D-7
      PN(3)=1.D-7
      PN(4)=1.D-7
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      CALL SPL1DF(RGN,F0,RUF,UPRE0,NRFMAX,IERR)
      IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF NE2: IERR=",IERR
      PNS(1)=F0*1.D-20
      PNS(2)=F0*1.D-20-2.D-8
      PNS(3)=1.D-8
      PNS(4)=1.D-8
C
      KFILE='Q'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RGN=DBLE(NR)*DR
         CALL SPL1DF(RGN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF Q: IERR=",IERR
         QPU(NR,1)=F0
      ENDDO
      IF(KUFDEV.EQ.'jt60u') THEN
         DO NR=NRMAX-1,NRMAX
            QPU(NR,1)=FEDG(DBLE(NR)*DR,DBLE(NR-1)*DR,DBLE(NR-2)*DR,
     &                     QPU(NR-1,1),QPU(NR-2,1))
         ENDDO
         WRITE(6,*) KFILE,'IS MODIFIED.'
      ENDIF
C
      KFILE='CURTOT'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RGN=DBLE(NR)*DR
         CALL SPL1DF(RGN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF Q: IERR=",IERR
         AJU(NR,1)=F0
      ENDDO
C
      KFILE='QNBIE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QNBIE: IERR=",IERR
         IF(F0.LT.0.D0) THEN
            PNBU(NR,1,1)=0.D0
         ELSE
            PNBU(NR,1,1)=F0
         ENDIF
      ENDDO
C
      KFILE='QNBII'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QNBII: IERR=",IERR
         IF(F0.LT.0.D0) THEN
            PNBU(NR,2,1)=0.D0
         ELSE
            PNBU(NR,2,1)=F0
         ENDIF
      ENDDO
C
      DO NR=1,NRMAX
         PICU(NR,1,1)=0.D0
         PICU(NR,2,1)=0.D0
         PECU(NR,  1)=0.D0
      ENDDO
      KFILE='QICRHE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QICRHE: IERR=",IERR
         IF(F0.LT.0.D0) THEN
            PICU(NR,1,1)=0.D0
         ELSE
            PICU(NR,1,1)=F0
         ENDIF
      ENDDO
C
      KFILE='QICRHI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QICRHI: IERR=",IERR
         IF(F0.LT.0.D0) THEN
            PICU(NR,2,1)=0.D0
         ELSE
            PICU(NR,2,1)=F0
         ENDIF
      ENDDO
C
      KFILE='QRAD'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QRAD: IERR=",IERR
         PRLU(NR,1)=F0
      ENDDO
C
      KFILE='SNBIE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QRAD: IERR=",IERR
         SNBU(NR,1,1)=F0
      ENDDO
C
      KFILE='SNBII'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF QRAD: IERR=",IERR
         SNBU(NR,2,1)=F0
      ENDDO
C
C     *** GEOMETORY FACTORS ***
C
      KFILE='VOLUME'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DD(RMN,F0,DF0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DD VOLUME: IERR=",IERR
         DVRHOU(NR,1)=DF0
      ENDDO
      IF(KUFDEV.EQ.'jt60u') THEN
         DO NR=NRMAX-2,NRMAX
            DVRHOU(NR,1)=FEDG(DBLE(NR)*DR,DBLE(NR-1)*DR,DBLE(NR-2)*DR,
     &                        DVRHOU(NR-1,1),DVRHOU(NR-2,1))
         ENDDO
         WRITE(6,*) KFILE,'IS MODIFIED.'
      ENDIF
C
      KFILE='RMAJOR'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF RMAJOR: IERR=",IERR
         RMJRHOU(NR,1)=F0
         ARRHOU(NR,1)=1.D0/RMJRHOU(NR,1)**2
         TTRHOU(NR,1)=BB*RMJRHOU(NR,1)
         DSRHOU(NR,1)=DVRHOU(NR,1)/(2.D0*PI*RMJRHOU(NR,1))
      ENDDO
C
      KFILE='RMINOR'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF RMINOR: IERR=",IERR
         RMNRHOU(NR,1)=F0
      ENDDO
C
      KFILE='GRHO1'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF GRHO1: IERR=",IERR
         AR1RHOU(NR,1)=F0
      ENDDO
C
      KFILE='GRHO2'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT0(KFILE,UPRE0,NRFMAX,NTXMAX,IERR)
      DO NR=1,NRMAX
         RMN=(DBLE(NR)-0.5D0)*DR
         CALL SPL1DF(RMN,F0,RUF,UPRE0,NRFMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF GRHO2: IERR=",IERR
         AR2RHOU(NR,1)=F0
         ABRHOU(NR,1)=AR2RHOU(NR,1)*ARRHOU(NR,1)
      ENDDO
      IF(KUFDEV.EQ.'jt60u') THEN
         DO NR=NRMAX-2,NRMAX
            AR2RHOU(NR,1)=FEDG(DBLE(NR)*DR,DBLE(NR-1)*DR,DBLE(NR-2)*DR,
     &                         AR2RHOU(NR-1,1),AR2RHOU(NR-2,1))
            ABRHOU(NR,1)=AR2RHOU(NR,1)*ARRHOU(NR,1)
         ENDDO
         WRITE(6,*) KFILE,'IS MODIFIED.'
      ENDIF
C
C     *****
C
      IF(NTXSMAX.EQ.0) THEN
         NTXSMAX=NTXMAX
         DO NTX=1,NTXMAX
            TMUS(NTX)=TMU(NTX)
         ENDDO
      ENDIF
C
      MDSUM=MDRGEO+MDAMIN+MDIP+MDBT+MDKAPPA
      IF(MDSUM.NE.0) THEN
         DO NTX=1,NTXMAX
           IF(MDRGEO .NE.0) RRU  (NTX)=RR
           IF(MDAMIN .NE.0) RAU  (NTX)=RA
           IF(MDIP   .NE.0) RIPU (NTX)=RIPS
           IF(MDBT   .NE.0) BBU  (NTX)=BB
           IF(MDKAPPA.NE.0) RKAPU(NTX)=RKAP
         ENDDO
      ENDIF
C
      DO NTX=1,NTXSMAX
         IF(ABS(TMUS(NTX)-TMU(1)).LE.1.D-6) THEN
            RR   = RRU(NTX)
            RA   = RAU(NTX)
            RIPS = RIPU(NTX)
            BB   = BBU(NTX)
            RKAP = RKAPU(NTX)
            GOTO 2000
         ENDIF
      ENDDO
      STOP 'UFILE HAS AN ERROR!'
 2000 CONTINUE
C
      NROMAX = NRMAX
      NRMAX  = NRAMAX
C
      RETURN
      END
C
C     ***********************************************************
C
C           TIME EVOLUTIONAL UFILE DATA INPUT ROUTINE
C
C     ***********************************************************
C
      SUBROUTINE TR_TIME_UFILE
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION UPRE1(4,NTURM),UPRE2(4,4,NRMU,NTURM)
      DIMENSION UPRE2T(4,4,NRMU,NTURM)
      CHARACTER KFILE*20
C
      NRAMAX=INT(RHOA*NRMAX)
      DR = 1.D0/DBLE(NRMAX)
      ICK=0
      TMUMAX=0.D0
C
C     *** 1D VALUE ***
C
      KFILE='RGEO'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UPRE1,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UPRE1,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF RGEO: IERR=",IERR
         RRU(NTA)=F0
      ENDDO
C
      KFILE='AMIN'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UPRE1,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UPRE1,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF AMIN: IERR=",IERR
         RAU(NTA)=F0
      ENDDO
C
      KFILE='IP'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UPRE1,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UPRE1,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF IP: IERR=",IERR
         RIPU(NTA)=ABS(F0*1.D-6)
      ENDDO
C
      KFILE='BT'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT1(KFILE,UPRE1,NTXMAX,TMUMAX,ICK,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL1DF(TMLCL,F0,TMU,UPRE1,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF BT: IERR=",IERR
         BBU(NTA)=ABS(F0)
      ENDDO
C
      KFILE='KAPPA'
      CALL UFREAD_TIME(KFILE,TMU,F1,NTXMAX,MDCHK,IERR)
      IF(IERR.EQ.1) THEN
         DO NTA=1,NTAMAX
            RKAPU(NTA)=1.D0
         ENDDO
      ELSE
         CALL PRETREATMENT1(KFILE,UPRE1,NTXMAX,TMUMAX,ICK,IERR)
         DO NTA=1,NTAMAX
            TMLCL=DT*DBLE(NTA)
            CALL SPL1DF(TMLCL,F0,TMU,UPRE1,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL1DF KAPPA: IERR=",IERR
            RKAPU(NTA)=F0
         ENDDO
      ENDIF
C
C     *** 2D VALUE ***
C
      KFILE='TE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE1: IERR=",IERR
            RTU(NR,1,NTA)=F0*1.D-3
         ENDDO
      ENDDO
      DO NR=1,NRMAX
         RT(NR,1)=RTU(NR,1,1)
      ENDDO
      PT(1) = RT(1,1)
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UPRE2,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE2: IERR=",IERR
         PTSU(1,NTA)=F0*1.D-3
      ENDDO
      PTS(1)=PTSU(1,1)
C
      KFILE='TI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TI1: IERR=",IERR
            RTU(NR,2,NTA)=F0*1.D-3
         ENDDO
      ENDDO
      DO NR=1,NRMAX
         RT(NR,2)=RTU(NR,2,1)
      ENDDO
      PT(2) = RT(1,2)
      PT(3) = RT(1,2)
      PT(4) = RT(1,2)
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UPRE2,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE2: IERR=",IERR
         PTSU(2,NTA)=F0*1.D-3
      ENDDO
      PTS(2)=PTSU(2,1)
      PTS(3)=PTSU(2,1)
      PTS(4)=PTSU(2,1)
C
      KFILE='NE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF NE1: IERR=",IERR
            RNU(NR,1,NTA)=F0*1.D-20
            RNU(NR,2,NTA)=F0*1.D-20
         ENDDO
      ENDDO
      PN(1)=RNU(1,1,1)
      PN(2)=RNU(1,2,1)
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UPRE2,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF NE2: IERR=",IERR
         PNSU(1,NTA)=F0*1.D-20
         PNSU(2,NTA)=F0*1.D-20
      ENDDO
      PNS(1)=PNSU(1,1)
      PNS(2)=PNSU(2,1)
C
      KFILE='Q'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RGN=DBLE(NR)*DR
            CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF Q: IERR=",IERR
            QPU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='QNBIE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QNBIE: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PNBU(NR,1,NTA)=0.D0
            ELSE
               PNBU(NR,1,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QNBII'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QNBII: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PNBU(NR,2,NTA)=0.D0
            ELSE
               PNBU(NR,2,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      DO NTA=1,NTAMAX
         DO NR=1,NRMAX
            PICU(NR,1,NTA)=0.D0
            PICU(NR,2,NTA)=0.D0
            PECU(NR,  NTA)=0.D0
         ENDDO
      ENDDO
      KFILE='QICRHE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QICRHE: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PICU(NR,1,NTA)=0.D0
            ELSE
               PICU(NR,1,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QICRHI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QICRHI: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PICU(NR,2,NTA)=0.D0
            ELSE
               PICU(NR,2,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QECH'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QECH: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PECU(NR,NTA)=0.D0
            ELSE
               PECU(NR,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QRAD'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QRAD: IERR=",IERR
            PRLU(NR,NTA)=F0
         ENDDO
      ENDDO
C
C     *** GEOMETORY FACTORS ***
C
      KFILE='VOLUME'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,1,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DD(RMN,TMLCL,F0,DFX0,DFY0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DD VOLUME: IERR=",IERR
            DVRHOU(NR,NTA)=DFX0
         ENDDO
      ENDDO
C
      KFILE='RMAJOR'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF RMAJOR: IERR=",IERR
            RMJRHOU(NR,NTA)=F0
            ARRHOU(NR,NTA)=1.D0/RMJRHOU(NR,NTA)**2
            TTRHOU(NR,NTA)=BB*RMJRHOU(NR,NTA)
            DSRHOU(NR,NTA)=DVRHOU(NR,NTA)/(2.D0*PI*RMJRHOU(NR,NTA))
         ENDDO
      ENDDO
C
      KFILE='RMINOR'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,1,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF RMINOR: IERR=",IERR
            RMNRHOU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='GRHO1'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF GRHO1: IERR=",IERR
            AR1RHOU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='GRHO2'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF GRHO2: IERR=",IERR
            AR2RHOU(NR,NTA)=F0
            ABRHOU(NR,NTA)=AR2RHOU(NR,NTA)*ARRHOU(NR,NTA)
         ENDDO
      ENDDO
C
      NROMAX = NRMAX
      NRMAX  = NRAMAX
C
      RETURN
      END
C
C
C     ***********************************************************
C
C           TIME EVOLUTIONAL UFILE DATA INPUT ROUTINE FOR TOPICS
C
C     ***********************************************************
C
      SUBROUTINE TR_TIME_UFILE_TOPICS
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION UPRE1(4,NTURM),UPRE2(4,4,NRMU,NTURM)
      CHARACTER KFILE*20
C
      NRAMAX=INT(RHOA*NRMAX)
      DR = 1.D0/DBLE(NRMAX)
      ICK=0
      TMUMAX=0.D0
C
C     *** 2D VALUE ***
C
      KFILE='TE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TE1: IERR=",IERR
            RTU(NR,1,NTA)=F0*1.D-3
         ENDDO
      ENDDO
C
      KFILE='TI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF TI1: IERR=",IERR
            RTU(NR,2,NTA)=F0*1.D-3
         ENDDO
      ENDDO
C
      KFILE='NE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF NE1: IERR=",IERR
            RNU(NR,1,NTA)=F0*1.D-20
            RNU(NR,2,NTA)=F0*1.D-20
         ENDDO
      ENDDO
C      PN(1)=RNU(1,1,1)
C      PN(2)=RNU(1,2,1)
      IF(RHOA.EQ.1.D0) THEN
         RGN=DBLE(NRMAX)*DR
      ELSE
         RGN=DBLE(NRAMAX)*DR
      ENDIF
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UPRE2,NRMU,NRFMAX,NTXMAX,IERR)
         IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF NE2: IERR=",IERR
         PNSU(1,NTA)=F0*1.D-20
         PNSU(2,NTA)=F0*1.D-20
      ENDDO
C      PNS(1)=PNSU(1,1)
C      PNS(2)=PNSU(2,1)
C
      KFILE='Q'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RGN=DBLE(NR)*DR
            CALL SPL2DF(RGN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL2DF Q: IERR=",IERR
            QPU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      KFILE='CURTOT'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=DBLE(NR-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF Q: IERR=",IERR
            AJU(NR,NTA)=F0
         ENDDO
      ENDDO
C
      IF(KUFDEV.EQ.'X'.AND.KUFDCG.EQ.'14') THEN
      KFILE='CURBS'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=DBLE(NR-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0) WRITE(6,*) "XX TRFILE: SPL1DF Q: IERR=",IERR
            AJBSU(NR,NTA)=F0
         ENDDO
      ENDDO
      ENDIF
C
      KFILE='QNBIE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QNBIE: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PNBU(NR,1,NTA)=0.D0
            ELSE
               PNBU(NR,1,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QNBII'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QNBII: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PNBU(NR,2,NTA)=0.D0
            ELSE
               PNBU(NR,2,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      DO NTA=1,NTAMAX
         DO NR=1,NRMAX
            PICU(NR,1,NTA)=0.D0
            PICU(NR,2,NTA)=0.D0
            PECU(NR,  NTA)=0.D0
         ENDDO
      ENDDO
      KFILE='QICRHE'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QICRHE: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PICU(NR,1,NTA)=0.D0
            ELSE
               PICU(NR,1,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QICRHI'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QICRHI: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PICU(NR,2,NTA)=0.D0
            ELSE
               PICU(NR,2,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QECH'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QECH: IERR=",IERR
            IF(F0.LT.0.D0) THEN
               PECU(NR,NTA)=0.D0
            ELSE
               PECU(NR,NTA)=F0
            ENDIF
         ENDDO
      ENDDO
C
      KFILE='QRAD'
      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
      DO NTA=1,NTAMAX
         TMLCL=DT*DBLE(NTA)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
     &                  NRMU,NRFMAX,NTXMAX,IERR)
            IF(IERR.NE.0)
     &           WRITE(6,*) "XX TRFILE: SPL2DF QRAD: IERR=",IERR
            PRLU(NR,NTA)=F0
         ENDDO
      ENDDO
C
C     *** GEOMETORY FACTORS ***
C
C      KFILE='VOLUME'
C      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
C      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,1,IERR)
C      DO NTA=1,NTAMAX
C         TMLCL=DT*DBLE(NTA)
C         DO NR=1,NRMAX
C            RMN=(DBLE(NR)-0.5D0)*DR
C            CALL SPL2DD(RMN,TMLCL,F0,DFX0,DFY0,RUF,TMU,UPRE2,
C     &                  NRMU,NRFMAX,NTXMAX,IERR)
C            IF(IERR.NE.0)
C     &           WRITE(6,*) "XX TRFILE: SPL2DD VOLUME: IERR=",IERR
C            DVRHOU(NR,NTA)=DFX0
C         ENDDO
C      ENDDO
C
C      KFILE='RMAJOR'
C      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
C      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,0,IERR)
C      DO NTA=1,NTAMAX
C         TMLCL=DT*DBLE(NTA)
C         DO NR=1,NRMAX
C            RMN=(DBLE(NR)-0.5D0)*DR
C            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
C     &                  NRMU,NRFMAX,NTXMAX,IERR)
C            IF(IERR.NE.0)
C     &           WRITE(6,*) "XX TRFILE: SPL2DF RMAJOR: IERR=",IERR
C            RMJRHOU(NR,NTA)=F0
C            ARRHOU(NR,NTA)=1.D0/RMJRHOU(NR,NTA)**2
C            TTRHOU(NR,NTA)=BB*RMJRHOU(NR,NTA)
C            DSRHOU(NR,NTA)=DVRHOU(NR,NTA)/(2.D0*PI*RMJRHOU(NR,NTA))
C         ENDDO
C      ENDDO
C
C      KFILE='RMINOR'
C      CALL UFREAD2_TIME(KFILE,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
C      CALL PRETREATMENT2(KFILE,UPRE2,NRFMAX,NTXMAX,TMUMAX,ICK,1,IERR)
C      DO NTA=1,NTAMAX
C         TMLCL=DT*DBLE(NTA)
C         DO NR=1,NRMAX
C            RMN=(DBLE(NR)-0.5D0)*DR
C            CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,UPRE2,
C     &                  NRMU,NRFMAX,NTXMAX,IERR)
C            IF(IERR.NE.0)
C     &           WRITE(6,*) "XX TRFILE: SPL2DF RMINOR: IERR=",IERR
C            RMNRHOU(NR,NTA)=F0
C         ENDDO
C      ENDDO
C
      DO NTA=1,NTAMAX
         DO NR=1,NRMAX
            RM(NR)  = (DBLE(NR)-0.5D0)*DR
            DVRHOU(NR,NTA)=2.D0*PI*RKAP*RA*RA*2.D0*PI*RR*RM(NR)
            DSRHOU(NR,NTA)=2.D0*PI*RKAP*RA*RA*RM(NR)
            ABRHOU(NR,NTA)=1.D0/(RA*RR)**2
            ARRHOU(NR,NTA)=1.D0/RR**2
            AR1RHOU(NR,NTA)=1.D0/RA
            AR2RHOU(NR,NTA)=1.D0/RA**2
            ABRHOU(NR,NTA)=AR2RHOU(NR,NTA)*ARRHOU(NR,NTA)
            EPSRHO(NR)=RA*RG(NR)/RR
            EKAPPA(NR)=RKAP
            RMJRHOU(NR,NTA)=RR
            RMNRHOU(NR,NTA)=RA*RG(NR)
            TTRHOU(NR,NTA)=12.6
         ENDDO
      ENDDO
C
C     *** 1D VALUE ***
C
      DO NTA=1,NTAMAX
         RRU(NTA)=RR
      ENDDO
C
      DO NTA=1,NTAMAX
         RAU(NTA)=RA
      ENDDO
C
      DO NTA=1,NTAMAX
         RIPU(NTA)=RIPS
      ENDDO
C
      DO NTA=1,NTAMAX
         BBU(NTA)=BB
      ENDDO
C
      DO NTA=1,NTAMAX
         RKAPU(NTA)=RKAP
      ENDDO
C
C     ***
C
      NROMAX = NRMAX
      NRMAX  = NRAMAX
C
      RETURN
      END
C
C     ***********************************************************
C
C           PRETREATMENT SUBROUTINE FOR TR_TIME_UFILE
C
C     ***********************************************************
C
      SUBROUTINE PRETREATMENT0(KFILE,U,NRFMAX,NTXMAX,IERR)
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      DIMENSION DERIV(NRMU)
      DIMENSION U(4,NRMU)
      CHARACTER KFILE*20
C
      IF(IERR.EQ.1) THEN
         IERR=0
         DO NTX=1,NTXMAX
         DO NA=1,4
            U(NA,NTX)=0.D0
         ENDDO
         ENDDO
         RETURN
      ENDIF
C
      DERIV(1)=0.D0
      DERIV(NRFMAX)=0.D0
C
      IF(NTXMAX.NE.1) THEN
         IF(TIME_INT.LE.0.D0) THEN
 100        WRITE(6,500) 'INPUT ARBITRARY TIME:',TMU(1),' -',TMU(NTXMAX)
            READ(5,*,ERR=100) TIME_INT
            IF(TIME_INT.LT.TMU(1).OR.TIME_INT.GT.TMU(NTXMAX)) GOTO 100
            DO NTX=1,NTXMAX
               IF(ABS(TMU(NTX)-TIME_INT).LE.1.D-6) THEN
                  NISTP=NTX
                  GOTO 1000
               ENDIF
            ENDDO
C
            TMU_MIN=TMU(NTXMAX)
            DO NTX=1,NTXMAX
               TMU_MIN_OLD=TMU_MIN
               TMU_MIN=MIN(ABS(TMU(NTX)-TIME_INT),TMU_MIN)
               IF(TMU_MIN_OLD.EQ.TMU_MIN) THEN
                  NTX_MIN=NTX-1
                  GOTO 200
               ENDIF
            ENDDO
         ELSE
            IF(TIME_INT.GE.TMU(1).AND.TIME_INT.LE.TMU(NTXMAX)) THEN
               DO NTX=1,NTXMAX
                  IF(ABS(TMU(NTX)-TIME_INT).LE.1.D-6) THEN
                     NISTP=NTX
                     GOTO 1000
                  ENDIF
               ENDDO
C
               TMU_MIN=TMU(NTXMAX)
               DO NTX=1,NTXMAX
                  TMU_MIN_OLD=TMU_MIN
                  TMU_MIN=MIN(ABS(TMU(NTX)-TIME_INT),TMU_MIN)
                  IF(TMU_MIN_OLD.EQ.TMU_MIN) THEN
                     NTX_MIN=NTX-1
                     GOTO 200
                  ENDIF
               ENDDO
            ENDIF
            STOP '## AN ERROR HAS OCCURRED!'
         ENDIF
C
 200     WRITE(6,510) 'TIME_INT=',TIME_INT,' HAS BEEN REPLACED BY',
     &              TMU(NTX_MIN)
         TIME_INT=TMU(NTX_MIN)
         NISTP=NTX_MIN
 1000    CONTINUE
C
         CALL SPL1D(RUF,F2(1,NISTP),DERIV,U,NRFMAX,3,IERR)
         IF(IERR.NE.0)
     &        WRITE(6,*) 'XX TRFILE: SPL1D',KFILE,': IERR=',IERR
         
      ELSE
         CALL SPL1D(RUF,F2(1,1),DERIV,U,NRFMAX,3,IERR)
         IF(IERR.NE.0)
     &        WRITE(6,*) 'XX TRFILE: SPL1D',KFILE,': IERR=',IERR
      ENDIF
C
      RETURN
 500  FORMAT(' ',A,F8.4,A,F8.4)
 510  FORMAT(' ',A,F8.4,A,F8.4)
      END
C
C     *****
C
      SUBROUTINE PRETREATMENT1(KFILE,U,NTXMAX,TMUMAX,ICK,IERR)
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION DERIV(NTURM)
      DIMENSION U(4,NTURM)
      CHARACTER KFILE*20
C
      IF(IERR.EQ.1) THEN
         IERR=0
         DO NTX=1,NTXMAX
         DO NA=1,4
            U(NA,NTX)=0.D0
         ENDDO
         ENDDO
         RETURN
      ENDIF
C
      DERIV(1)=0.D0
      DERIV(NTXMAX)=0.D0
C
      DO NTX=2,NTXMAX
         TMU(NTX)=(TMU(NTX)-TMU(1))
      ENDDO
      TMU(1)=0.D0
      IF(ICK.NE.0) THEN
         IF(ICK.EQ.2.AND.TMUMAX.EQ.0.D0) GOTO 1000
         IF(TMUMAX.NE.TMU(NTXMAX)) THEN
            WRITE(6,*) 'XX TRFILE:',KFILE,'UFILE HAS AN ERROR!'
            WRITE(6,*) TMUMAX,TMU(NTXMAX)
            STOP
         ENDIF
      ENDIF
 1000 CONTINUE
      TMUMAX=TMU(NTXMAX)
      NTAMAX=INT(DINT(TMU(NTXMAX)*1.D2)*1.D-2/DT)
      IF(ICK.NE.2) ICK=1
C
      CALL SPL1D(TMU,F1,DERIV,U,NTXMAX,3,IERR)
      IF(IERR.NE.0) WRITE(6,*) 'XX TRFILE: SPL1D',KFILE,': IERR=',IERR
C
      RETURN
      END
C
C     *****
C
      SUBROUTINE PRETREATMENT2(KFILE,U,NRFMAX,NTXMAX,TMUMAX,
     &                         ICK,MODE,IERR)
C
      INCLUDE 'trcomm.h'
      COMMON /PRETREAT1/ RUF(NRMU),TMU(NTURM),F1(NTURM),F2(NRMU,NTURM)
      COMMON /PRETREAT2/ NTAMAX
      DIMENSION DERIVX(NRMU,NTURM),DERIVY(NRMU,NTURM)
      DIMENSION DERIVXY(NRMU,NTURM)
      DIMENSION U(4,4,NRMU,NTURM)
      CHARACTER KFILE*20
      DIMENSION F3(NRMU),DERIV(NRMU),UT(4,NRMU)
C
      IF(IERR.EQ.1) THEN
         IERR=0
         DO NTX=1,NTXMAX
         DO NRF=1,NRFMAX
         DO NB=1,4
         DO NA=1,4
            U(NA,NB,NRF,NTX)=0.D0
         ENDDO
         ENDDO
         ENDDO
         ENDDO
         RETURN
      ENDIF
C
      DO NTX=1,NTXMAX
         DERIVX(1,NTX)=0.D0
      ENDDO
      DERIVXY(1,     1)=0.D0
      DERIVXY(1,NTXMAX)=0.D0
C
      DO NTX=2,NTXMAX
         TMU(NTX)=(TMU(NTX)-TMU(1))
      ENDDO
      TMU(1)=0.D0
      IF(ICK.NE.0) THEN
         IF(TMUMAX.NE.TMU(NTXMAX)) THEN
            WRITE(6,*) 'XX TRFILE:',KFILE,'UFILE HAS AN ERROR!'
            WRITE(6,*) TMUMAX,TMU(NTXMAX)
            STOP
         ENDIF
      ENDIF
      TMUMAX=TMU(NTXMAX)
      NTAMAX=INT(DINT(TMU(NTXMAX)*1.D2)*1.D-2/DT)
C
      IF(MODE.EQ.0) THEN
         CALL SPL2D(RUF,TMU,F2,DERIVX,DERIVY,DERIVXY,U,
     &              NRMU,NRFMAX,NTXMAX,1,0,IERR)
      ELSEIF(MODE.EQ.1) THEN
         CALL SPL2D(RUF,TMU,F2,DERIVX,DERIVY,DERIVXY,U,
     &              NRMU,NRFMAX,NTXMAX,0,0,IERR)
      ELSE
         DERIV(1)=0.D0
         DERIV(NTXMAX)=0.D0
C
         NTN=MODE-1
         IF(NTN.LE.0) STOP
         DO NRF=1,NRFMAX
            F3(NRF)=F2(NRF,NTN)
         ENDDO
         CALL SPL1D(RUF,F3,DERIV,UT,NRFMAX,3,IERR)
         DO NR=1,NRMAX
            RMN=(DBLE(NR)-0.5D0)*DR
            CALL SPL1DF(RMN,F0,RUF,UT,NRFMAX,IERR)
            write(6,*) RMN,F0
         ENDDO
      ENDIF
      IF(IERR.NE.0) WRITE(6,*) 'XX TRFILE: SPL2D',KFILE,': IERR=',IERR
      ICK=1
c$$$C
c$$$      TMLCL=DT*DBLE(4)
c$$$      DO NR=1,NRMAX
c$$$         RMN=(DBLE(NR)-0.5D0)*DR
c$$$         CALL SPL2DF(RMN,TMLCL,F0,RUF,TMU,U,
c$$$     &                  NRMU,NRFMAX,NTXMAX,IERR)
c$$$         write(6,*) NR,F0*1.D-3
c$$$      ENDDO
C
      RETURN
      END
C
C     ***********************************************************
C
C           READING DATA FROM UFILES WITH NT INCREMENT
C
C     ***********************************************************
C
      SUBROUTINE TR_UFREAD
C
      INCLUDE 'trcomm.h'
C
      RKAP=RKAPU(NT)
      RKAPS=SQRT(RKAPU(NT))
C
      RR=RRU(NT)
      RA=RAU(NT)
      BB=BBU(NT)
C
      IF(RHOA.NE.1.D0) NRMAX=NROMAX
      IF(MDLUF.EQ.1) THEN
      DO NR=1,NRMAX
         RN(NR,1)=RNU(NR,1,NT)
         RN(NR,2)=RNU(NR,2,NT)
         QP(NR)=QPU(NR,NT)
         BP(NR)=RKAPS*RA*RG(NR)*BB/(RR*QP(NR))
         PEX(NR,1)=PNBU(NR,1,NT)
         PEX(NR,2)=PNBU(NR,2,NT)
         PRF(NR,1)=PICU(NR,1,NT)+PECU(NR,NT)
         PRF(NR,2)=PICU(NR,2,NT)
         TTRHO(NR)=TTRHOU(NR,NT)
         DVRHO(NR)=DVRHOU(NR,NT)
         DSRHO(NR)=DSRHOU(NR,NT)
         ABRHO(NR)=ABRHOU(NR,NT)
         ARRHO(NR)=ARRHOU(NR,NT)
         AR1RHO(NR)=AR1RHOU(NR,NT)
         AR2RHO(NR)=AR2RHOU(NR,NT)
         RMJRHO(NR)=RMJRHOU(NR,NT)
         RMNRHO(NR)=RMNRHOU(NR,NT)
         EKAPPA(NR)=RKAP
      ENDDO
      ELSEIF(MDLUF.EQ.3) THEN
      DO NR=1,NRMAX
C         RN(NR,1)=RNU(NR,1,NT)
C         RN(NR,2)=RNU(NR,2,NT)
C         QP(NR)=QPU(NR,NT)
C         BP(NR)=RKAPS*RA*RG(NR)*BB/(RR*QP(NR))
         PEX(NR,1)=PNBU(NR,1,NT)
         PEX(NR,2)=PNBU(NR,2,NT)
         PRF(NR,1)=PICU(NR,1,NT)+PECU(NR,NT)
         PRF(NR,2)=PICU(NR,2,NT)
         TTRHO(NR)=TTRHOU(NR,NT)
         DVRHO(NR)=DVRHOU(NR,NT)
         DSRHO(NR)=DSRHOU(NR,NT)
         ABRHO(NR)=ABRHOU(NR,NT)
         ARRHO(NR)=ARRHOU(NR,NT)
         AR1RHO(NR)=AR1RHOU(NR,NT)
         AR2RHO(NR)=AR2RHOU(NR,NT)
         RMJRHO(NR)=RMJRHOU(NR,NT)
         RMNRHO(NR)=RMNRHOU(NR,NT)
         EKAPPA(NR)=RKAP
      ENDDO
      ENDIF
C      Q0  = (4.D0*QP(1) -QP(2) )/3.D0
      CALL TRARRG
C
      IF(MDLUF.EQ.1) THEN
      PNS(1)=PNSU(1,NT)
      PNS(2)=PNSU(2,NT)
      PTS(1)=PTSU(1,NT)
      PTS(2)=PTSU(2,NT)
      IF(RHOA.NE.1.D0) THEN
         DO NR=NRAMAX+1,NRMAX
            PROF    = (1.D0-(ALP(1)*RM(NR)/RHOA)**PROFT1)**PROFT2
            RT(NR,1)=RTU(NR,1,NT)
            RT(NR,2)=RTU(NR,2,NT)
            RT(NR,3)=(RTU(NR,2,NT)-RTU(NRMAX,2,NT))*PROF
     &               +RTU(NRMAX,2,1)
            RT(NR,4)=(RTU(NR,2,NT)-RTU(NRMAX,2,NT))*PROF
     &               +RTU(NRMAX,2,1)
         ENDDO
      ENDIF
      ENDIF
C
C     *** CALCULATE PZC,PZFE ***
C
      CALL TRZEFF
C
C     *** CALCULATE ANEAVE ***
C
      ANESUM=0.D0
      DO NR=1,NRMAX
         ANESUM=ANESUM+RN(NR,1)*RM(NR)
      ENDDO 
      ANEAVE=ANESUM*2.D0*DR
C
C     *** CALCULATE IMPURITY DENSITY
C                ACCORDING TO ITER PHYSICS DESIGN GUIDELINE ***
C
      IF(MDLUF.NE.3) THEN
      DO NR=1,NRMAX
         ANC (NR)= (0.9D0+0.60D0*(0.7D0/ANEAVE)**2.6D0)*PNC
     &            *1.D-2*RN(NR,1)
         ANFE(NR)= (0.0D0+0.05D0*(0.7D0/ANEAVE)**2.3D0)*PNFE
     &            *1.D-2*RN(NR,1)
         ANI = 0.D0
         DO NS=2,NSM
            ANI=ANI+PZ(NS)*RN(NR,NS)
         ENDDO
         ANZ = PZFE(NR)*ANFE(NR)+PZC(NR)*ANC(NR)
         DILUTE = 1.D0-ANZ/ANI
         DO NS=2,NSM
            RN(NR,NS) = RN(NR,NS)*DILUTE
         ENDDO
      ENDDO
      PNSS(1)=PNS(1)
      DO NS=2,NSM
         PNSS(NS)=PNS(NS)*DILUTE
      ENDDO
      PNSS(7)=PNS(7)
      PNSS(8)=PNS(8)
      ELSE
c$$$         DO NR=1,NRMAX
c$$$            ANC(NR)=1.D0/3.D1*RN(NR,1)
c$$$         ENDDO
         DO NS=1,NSM
            PNSS(NS)=PNS(NS)
         ENDDO
         PNSS(7)=PNS(7)
         PNSS(8)=PNS(8)
      ENDIF
C
      IF(RHOA.NE.1.D0) NRMAX=NRAMAX
C
      RETURN
      END
C
C     ******
C
      SUBROUTINE TR_UFREAD_S
C
      INCLUDE 'trcomm.h'
C
      RKAP=RKAPU(1)
      RKAPS=SQRT(RKAP)
C
      RR=RRU(1)
      RA=RAU(1)
      BB=BBU(1)
C
      IF(RHOA.NE.1.D0) NRMAX=NROMAX
      DO NR=1,NRMAX
         RN(NR,1)=RNU(NR,1,1)
         RN(NR,2)=RNU(NR,2,1)
         QP(NR)=QPU(NR,1)
         BP(NR)=RKAPS*RA*RG(NR)*BB/(RR*QP(NR))
         PEX(NR,1)=PNBU(NR,1,1)
         PEX(NR,2)=PNBU(NR,2,1)
         PRF(NR,1)=PICU(NR,1,1)+PECU(NR,1)
         PRF(NR,2)=PICU(NR,2,1)
         TTRHO(NR)=TTRHOU(NR,1)
         DVRHO(NR)=DVRHOU(NR,1)
         DSRHO(NR)=DSRHOU(NR,1)
         ABRHO(NR)=ABRHOU(NR,1)
         ARRHO(NR)=ARRHOU(NR,1)
         AR1RHO(NR)=AR1RHOU(NR,1)
         AR2RHO(NR)=AR2RHOU(NR,1)
         RMJRHO(NR)=RMJRHOU(NR,1)
         RMNRHO(NR)=RMNRHOU(NR,1)
         EKAPPA(NR)=RKAP
      ENDDO
C      Q0  = (4.D0*QP(1) -QP(2) )/3.D0
      CALL TRARRG
C
C     *** CALCULATE PZC,PZFE ***
C
      CALL TRZEFF
C
C     *** CALCULATE ANEAVE ***
C
      ANESUM=0.D0
      DO NR=1,NRMAX
         ANESUM=ANESUM+RN(NR,1)*RM(NR)
      ENDDO 
      ANEAVE=ANESUM*2.D0*DR
C
C     *** CALCULATE IMPURITY DENSITY
C                ACCORDING TO ITER PHYSICS DESIGN GUIDELINE ***
C
      DO NR=1,NRMAX
         ANC (NR)= (0.9D0+0.60D0*(0.7D0/ANEAVE)**2.6D0)*PNC
     &            *1.D-2*RN(NR,1)
         ANFE(NR)= (0.0D0+0.05D0*(0.7D0/ANEAVE)**2.3D0)*PNFE
     &            *1.D-2*RN(NR,1)
         ANI = 0.D0
         DO NS=2,NSM
            ANI=ANI+PZ(NS)*RN(NR,NS)
         ENDDO
         ANZ = PZFE(NR)*ANFE(NR)+PZC(NR)*ANC(NR)
         DILUTE = 1.D0-ANZ/ANI
         DO NS=2,NSM
            RN(NR,NS) = RN(NR,NS)*DILUTE
         ENDDO
      ENDDO
      PNSS(1)=PNS(1)
      DO NS=2,NSM
         PNSS(NS)=PNS(NS)*DILUTE
      ENDDO
      PNSS(7)=PNS(7)
      PNSS(8)=PNS(8)
C
      IF(RHOA.NE.1.D0) NRMAX=NRAMAX
C
      RETURN
      END
C
C   **************************************************
C   **    UFILE read for TR (Time Ecolution UFILE)  **
C   **************************************************
C
C     input:
C
C     KFID     : UFILE exsisting directory
C
C     output:
C
C     RUF(NRMU)      : Equally Spaced Normalized Radial Data
C     TMU(NTURM)     : Total Time Data (The Number of DT)
C     F1(NTURM)      : Functional Values
C     F2(NRMU,NTURM) : Functional Values
C     NRFMAX         : Maximum Number of the Radial Mesh
C     NTXMAX         : Maximum Number of the Time Mesh
C     MDCHK          : Loop Check Value
C     IERR           : Error Indicator
C
C   ***************************************************************
C
      SUBROUTINE UFREAD_TIME(KFID,TT,F1,NTXMAX,MDCHK,IERR)
C
      INCLUDE 'trcomm.h'
      DIMENSION TT(NTURM),F1(NTURM)
      CHARACTER KDIRR1*80
      CHARACTER KDIRX*80
      CHARACTER KFILE*80,KFID*20
      LOGICAL LEX
C
C      IF(MDCHK.NE.0) GOTO 9000
C
      CALL KTRIM(KUFDEV,IKNDEV)
      CALL KTRIM(KUFDCG,IKNDCG)
C
      KDIRX='../../tr.new/data/'//KUFDEV(1:IKNDEV)//'/'
     &                          //KUFDCG(1:IKNDCG)//'/in/'
      CALL KTRIM(KDIRX,IKDIRX)
      KDIRR1=KDIRX(1:IKDIRX)//KUFDEV(1:IKNDEV)
     &       //'1d'//KUFDCG(1:IKNDCG)//'.'
C
      CALL KTRIM(KDIRR1,KL1)
      KFILE=KDIRR1(1:KL1)//KFID
C
      INQUIRE(FILE=KFILE,EXIST=LEX,ERR=9000)
      IF(LEX) THEN
         CALL TRXR1D(KDIRR1,KFID,TT,F1,NTURM,NTXMAX,0)
         MDCHK=1
         IERR=0
      ELSE
         DO NTA=1,NTURM
            F1(NTA)=0.D0
         ENDDO
         IERR=1
      ENDIF
C
 9000 RETURN
      END
C
C     *****
C
      SUBROUTINE UFREAD2_TIME(KFID,RUF,TMU,F2,NRFMAX,NTXMAX,MDCHK,IERR)
C
      INCLUDE 'trcomm.h'
      DIMENSION RUF(NRMU),TMU(NTURM),F2(NRMU,NTURM)
      DIMENSION F2CTR(NTURM),F2EDG(NTURM)
      CHARACTER KDIRR2*80
      CHARACTER KDIRX*80
      CHARACTER KFILE*80,KFID*20
      LOGICAL LEX
C
C      IF(MDCHK.NE.0) GOTO 9000
C
      CALL KTRIM(KUFDEV,IKNDEV)
      CALL KTRIM(KUFDCG,IKNDCG)
C
      KDIRX='../../tr.new/data/'//KUFDEV(1:IKNDEV)//'/'
     &                          //KUFDCG(1:IKNDCG)//'/in/'
      CALL KTRIM(KDIRX,IKDIRX)
      KDIRR2=KDIRX(1:IKDIRX)//KUFDEV(1:IKNDEV)
     &       //'2d'//KUFDCG(1:IKNDCG)//'.'
C
      CALL KTRIM(KDIRR2,KL2)
      KFILE=KDIRR2(1:KL2)//KFID
C
      INQUIRE(FILE=KFILE,EXIST=LEX,ERR=9000)
      IF(LEX) THEN
         NRFMAX=52              ! equal to NRMU
         CALL TRXR2D(KDIRR2,KFID,TMU,RUF,F2,NRMU,NTURM,NRFMAX,NTXMAX,0)
         MDCHK=1
         IERR=0
      ELSE
         DO NTA=1,NTURM
            DO NRF=1,NRMU
               F2(NRF,NTA)=0.D0
            ENDDO
         ENDDO
         IERR=1
         GOTO 9000
      ENDIF
C     
      MD=0
      IF(RUF(1).NE.0.D0.AND.RUF(NRFMAX).NE.1.D0) THEN
         DO NTX=1,NTXMAX
            F2CTR(NTX)=FCTR(RUF(1),RUF(2),F2(1,NTX),F2(2,NTX))
            F2EDG(NTX)=FEDG(1.D0,RUF(NRFMAX-1),RUF(NRFMAX),
     &                      F2(NRFMAX-1,NTX),F2(NRFMAX,NTX))
         ENDDO
         MD=1
      ELSEIF(RUF(1).NE.0.D0.AND.RUF(NRFMAX).EQ.1.D0) THEN
         DO NTX=1,NTXMAX
            F2CTR(NTX)=FCTR(RUF(1),RUF(2),F2(1,NTX),F2(2,NTX))
         ENDDO
         MD=2
      ELSEIF(RUF(1).EQ.0.D0.AND.RUF(NRFMAX).NE.1.D0) THEN
         DO NTX=1,NTXMAX
            F2EDG(NTX)=FEDG(1.D0,RUF(NRFMAX-1),RUF(NRFMAX),
     &                      F2(NRFMAX-1,NTX),F2(NRFMAX,NTX))
         ENDDO
         MD=3
      ELSEIF(RUF(1).EQ.0.D0.AND.RUF(NRFMAX).EQ.1.D0) THEN
         MD=4
      ELSE
         STOP 'XX TRFILE: TRXR2D: ERROR'
      ENDIF
C
      CALL DATA_ERROR_CORRECT(KFID,RUF,F2,NRFMAX,NTXMAX,IERR)
C
      IF(MD.EQ.1) THEN
         NRFMAX=NRFMAX+2
         DO NRF=NRFMAX-1,2,-1
            RUF(NRF)=RUF(NRF-1)
         ENDDO
         RUF(1)=0.D0
         RUF(NRFMAX)=1.D0
         DO NTX=1,NTXMAX
            DO NRF=NRFMAX-1,2,-1
               F2(NRF,NTX)=F2(NRF-1,NTX)
            ENDDO
            F2(1,NTX)=F2CTR(NTX)
            F2(NRFMAX,NTX)=F2EDG(NTX)
         ENDDO
      ELSEIF(MD.EQ.2) THEN
         NRFMAX=NRFMAX+1
         DO NRF=NRFMAX,2,-1
            RUF(NRF)=RUF(NRF-1)
         ENDDO
         RUF(1)=0.D0
         DO NTX=1,NTXMAX
            DO NRF=NRFMAX,2,-1
               F2(NRF,NTX)=F2(NRF-1,NTX)
            ENDDO
            F2(1,NTX)=F2CTR(NTX)
         ENDDO
      ELSEIF(MD.EQ.3) THEN
         NRFMAX=NRFMAX+1
         DO NTX=1,NTXMAX
            F2(NRFMAX,NTX)=F2EDG(NTX)
         ENDDO
      ENDIF
C
 9000 RETURN
      END
C
C     *****
C
      FUNCTION FCTR(R1,R2,F1,F2)
C
      IMPLICIT REAL*8 (A-F,H,O-Z)
C
      FCTR = (R2**2*F1-R1**2*F2)/(R2**2-R1**2)
C
      RETURN
      END
C
      FUNCTION FEDG(R0,R1,R2,F1,F2)
C
      IMPLICIT REAL*8 (A-F,H,O-Z)
C
      FEDG = ((R2-R0)*F1-(R1-R0)*F2)/(R2-R1)
C
      RETURN
      END
C
C
C     ***********************************************************
C
C           WRONG DATA CORRECT
C
C     ***********************************************************
C
      SUBROUTINE DATA_ERROR_CORRECT(KFID,RUF,F2,NRFMAX,NTXMAX,IERR)
C
      INCLUDE 'trcomm.h'
      DIMENSION RUF(NRMU),F2(NRMU,NTURM)
      CHARACTER KFID*20
C
      IF(KUFDEV.EQ.'jet') THEN
         IF(KFID.EQ.'GRHO1') THEN
            IF(KUFDCG.EQ.'57987'.OR.KUFDCG.EQ.'58159'.OR.
     &         KUFDCG.EQ.'58323') THEN
               DO NTX=1,NTXMAX
                  F2(1,NTX)=FCTR(RUF(2),RUF(3),F2(2,NTX),F2(3,NTX))
               ENDDO
            ENDIF
         ENDIF
      ENDIF
C
      RETURN
      END

               
