C     $Id$
C
C     ****** SOLVE SIMULTANEOUS EQUATIONS ******
C
      SUBROUTINE WMSOLV
C
      INCLUDE 'wmcomm.inc'
C
      COMPLEX * 16 D,X
      COMPLEX * 16 P1,P2,Q1,Q2,R1,R2
      COMPLEX * 16 P,Q,R,W,R0,E,H
      COMPLEX * 16 AG,XG
      COMPLEX * 16 TMPA,TMPG
      COMPLEX * 16 TMPB
      COMPLEX * 16 TEMP1,TEMP2
      COMPLEX * 16 TINV1
      COMPLEX * 16 F
      REAL    *  8 EPS
      EXTERNAL WMSETM
C
      PARAMETER (NBSIZM=3*MDM*NDM)
C
      DIMENSION P1(MSIZP),P2(MSIZP)
      DIMENSION Q1(MSIZP),Q2(MSIZP)
      DIMENSION R1(MSIZP),R2(MSIZP)
      DIMENSION X(MSIZP),D(NBSIZM,MSIZP)
      DIMENSION P(MSIZP),Q(MSIZP),R(MSIZP)
      DIMENSION W(MSIZP)
      DIMENSION R0(MSIZP),E(MSIZP),H(MSIZP)
      DIMENSION TEMP1(NBSIZM,NBSIZM),TEMP2(NBSIZM)
      DIMENSION TMPA (NBSIZM,NBSIZM),TMPG (NBSIZM,NBSIZM)
      DIMENSION TMPB (NBSIZM)
      DIMENSION TINV1(NBSIZM,NBSIZM)
C      COMMON /WMSLV1/ AG(6*NBSIZM,2*NCPUMAX*NBSIZM)
C      COMMON /WMSLV2/ XG(2*NCPUMAX*NBSIZM)
C      COMMON /WMSLV3/ F(6*NBSIZM*2*NBSIZM)
C      COMMON /WMSLV3/ F(4*NBSIZM*2*NBSIZM)
      DIMENSION NM(NBSIZM)
      COMPLEX*8,DIMENSION(:,:),pointer:: CEM
      COMPLEX*8,DIMENSION(:),pointer:: CFV
      DIMENSION iposa(nsize),ilena(nsize)
C     
      NBSIZ=3*MDSIZ*NDSIZ
      IF(MODEWG.EQ.0) THEN
         MSIZ=NRMAX*NBSIZ
      ELSE
         MSIZ=NRMAX*NBSIZ+MWGMAX*NAMAX
      ENDIF
      MBND=2*NBSIZ
C
      ALLOCATE(CEM(MBNDM,MSIZ))
      ALLOCATE(CFV(MSIZ))
C
      NFRAC=(NRMAX-1)/NSIZE+1
      NBST=NRANK*NFRAC+1
      NBED=NBST+NFRAC-1
      IF(NRANK.EQ.NSIZE-1) NBED=NRMAX
C
      ISTA=NBSIZ*(NBST-1)+1
      IEND=NBSIZ*NBED
C
      NFST=1-2*NBSIZ
      NEND=IEND-ISTA+1+2*NBSIZ
C
      CALL MTXSET(NSIZE,NRANK,NBSIZ,NRMAX)
C
C      WRITE(6,*) 'MODELM,NSIZE=',MODELM,NSIZE
C      WRITE(6,*) 'NCPUMIN,NCPUMAX=',NCPUMIN,NCPUMAX
C      WRITE(6,*) 'NRANK,ISTA,IEND=',NRANK,ISTA,IEND
C
C
C     ######## SELECTION OF SOLUTION METHOD ########
C
      IF(MODELM.EQ.0.AND.NRANK.EQ.0) THEN
         CALL BANDCDNB(CEM,CFV,MSIZ,2*MBND-1,MBNDM,WMSETM,IERR)
         IF(IERR.NE.0.AND.NRANK.EQ.0) THEN
            WRITE(6,*) 'XXX BANDCD PIVOT ERROR: IERR=',IERR
         ENDIF
      ENDIF
C
      IF(MODELM.EQ.1.AND.NRANK.EQ.0) THEN
         CALL BANDCDB(CEM,CFV,X,MSIZ,2*MBND-1,MBNDM,
     &        NBSIZM,NM,TMPA,TMPG,TMPB,TINV1,TEMP1,TEMP2,
     &        NBSIZ,WMSETM,IERR)
      ENDIF
C
      IF(MODELM.EQ.2.AND.NRANK.EQ.0) THEN
         CALL BSTABCDB(CEM,MSIZ,MBND-1,MBNDM,NBSIZM,CFV,
     &                 EPS,ITR,X,D,R1,R2,P1,P2,Q1,Q2,H,W,
     &                 TEMP1,TEMP2,NM,NBSIZ,WMSETM,IERR)
         IF(IERR.NE.0.AND.NRANK.EQ.0) 
     &        WRITE(6,*) 'ITR=',ITR,'  EPS=',EPS
      ENDIF
C
c$$$      IF(MODELM.EQ.8) THEN
c$$$         CALL BANDCDM(CEM,CFV,MSIZ,2*MBND-1,MBNDM,
c$$$     &                F,NFST,NEND,WMSETM,IERR)
c$$$         IF(IERR.NE.0.AND.NRANK.EQ.0) THEN
c$$$            WRITE(6,*) 'XXX BANDCD PIVOT ERROR: IERR=',IERR
c$$$         ENDIF
c$$$      ENDIF
C
c$$$      IF(MODELM.EQ.9) THEN
c$$$         LG=18*MDSIZ*NDSIZ
c$$$         NG=2*NSIZE*NBSIZ
c$$$         CALL BANDCDBM(CEM,CFV,X,MSIZ,2*MBND-1,MBNDM,AG,LG,NG,XG,
c$$$     &        NBSIZM,F,NM,TMPA,TMPG,TMPB,TINV1,TEMP1,TEMP2,
c$$$     &        NBSIZ,NFST,NEND,WMSETM,IERR)
c$$$         IF(IERR.NE.0.AND.NRANK.EQ.0) 
c$$$     &        WRITE(6,*) 'ITR=',ITR,'  EPS=',EPS
c$$$      ENDIF
C
      IF(MODELM.EQ.10) THEN
         CALL BSTABCDBM(CEM,MSIZ,MBND-1,MBNDM,NBSIZM,CFV,
     &        EPS,ITR,X,D,R1,R2,P1,P2,Q1,Q2,H,W,F,TEMP1,TEMP2,
     &        NM,NBSIZ,NFST,NEND,WMSETM,IERR)
         IF(IERR.NE.0.AND.NRANK.EQ.0) 
     &        WRITE(6,*) 'ITR=',ITR,'  EPS=',EPS
      ENDIF
C
      IF(MODELM.GE.8) THEN
         ndata=IEND-ISTA+1
         CALL mtx_allgather1_integer(ndata,ilena)
         ntot=0
         DO i=1,nsize
            iposa(i)=ntot
            ntot=ntot+ilena(i)
         END DO
         CALL mtx_gatherv_complex8(CFB,ndata,CFA,ntot,ilena,iposa)
         NVTOT=ntot
C         CALL MPGTCV(CFV,IEND-ISTA+1,CFVG,NVTOT,MSIZM)
      ELSE
         IF(NRANK.EQ.0) THEN
            DO I=1,MSIZ
               CFVG(I)=CFV(I)
            ENDDO
         ENDIF
      ENDIF
      CALL MPBCCN(CFVG,MSIZ)
C
      DEALLOCATE(CFV)
      DEALLOCATE(CEM)
C
      RETURN
      END
