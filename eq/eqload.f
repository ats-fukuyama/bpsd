C     $Id$
C
C     ***** LOAD EQUILIBRIUM DATA *****
C
      SUBROUTINE EQLOAD(MODELG,KNAMEQ1,IERR)
C
      INCLUDE '../eq/eqcomq.inc'
      CHARACTER KNAMEQ1*80
C
      PI=2.D0*ASIN(1.D0)
      RMU0=4.D0*PI*1.D-7
      KNAMEQ=KNAMEQ1
C
      IF(MODELG.EQ.3) THEN
         CALL EQRTSK(IERR)
      ELSEIF(MODELG.EQ.5) THEN
         CALL EQDSKR(IERR)
      ELSE
         WRITE(6,*) 'XX EQLOAD: UNKNOWN MODELG: MODELG=',MODELG
      ENDIF
C
      RETURN
      END
C
C     ***** LOAD TASK/EQ DATA *****
C
      SUBROUTINE EQRTSK(IERR)
C
      INCLUDE '../eq/eqcomq.inc'
C
      CALL FROPEN(21,KNAMEQ,0,0,IERR)
      IF(IERR.NE.0) RETURN
C
      READ(21) RR,BB,RIP
      READ(21) NRGMAX,NZGMAX
      READ(21) (RG(NRG),NRG=1,NRGMAX)
      READ(21) (ZG(NZG),NZG=1,NZGMAX)
      READ(21) ((PSIRZ(NRG,NZG),NRG=1,NRGMAX),NZG=1,NZGMAX)
      READ(21) NPSMAX
      READ(21) (PSIPS(NPS),NPS=1,NPSMAX)
      READ(21) (PPPS(NPS),NPS=1,NPSMAX)
      READ(21) (TTPS(NPS),NPS=1,NPSMAX)
      READ(21) (TEPS(NPS),NPS=1,NPSMAX)
      READ(21) (OMPS(NPS),NPS=1,NPSMAX)
C
      READ(21) NSGMAX,NTGMAX
      READ(21) RA,RKAP,RDLT,RB
      READ(21) PJ0,PJ1,PJ2,PROFJ0,PROFJ1,PROFJ2
      READ(21) PP0,PP1,PP2,PROFP0,PROFP1,PROFP2
      READ(21) PT0,PT1,PT2,PROFT0,PROFT1,PROFT2
      READ(21) PV0,PV1,PV2,PROFV0,PROFV1,PROFV2
      READ(21) PROFR0,PROFR1,PROFR2
C     READ(21) PTS,PN0,HM
      CLOSE(21)
C
      RETURN
      END
C
C     ***** LOAD TASK/EQ DATA AND UFILE *****
C
      SUBROUTINE EQUFIN(KNAMEQ1,IERR)
C
      INCLUDE '../eq/eqcomq.inc'
C
      PARAMETER (NREM=130,NZEM=130)
      COMMON /TRKID1/ KDIRR2
      DIMENSION R(NREM),F2(NREM,NZEM),Z(NZEM)
      CHARACTER KXNDEV*80,KXNDCG*80
      CHARACTER KDIRR2*80
      CHARACTER KDIRX*80
      CHARACTER KFID*80
      LOGICAL LEX
      CHARACTER KNAMEQ1*80
C
      PI=2.D0*ASIN(1.D0)
      RMU0=4.D0*PI*1.D-7
      KNAMEQ=KNAMEQ1
C
      CALL FROPEN(21,KNAMEQ,0,0,IERR)
      IF(IERR.NE.0) RETURN
C
c$$$      READ(21) RR,BB,RIP
c$$$      READ(21) NRGMAX,NZGMAX
c$$$      READ(21) (RG(NRG),NRG=1,NRGMAX)
c$$$      READ(21) (ZG(NZG),NZG=1,NZGMAX)
c$$$      READ(21) ((PSIRZ(NRG,NZG),NRG=1,NRGMAX),NZG=1,NZGMAX)
      READ(21) NPSMAX
      READ(21) (PSIPS(NPS),NPS=1,NPSMAX)
      READ(21) (PPPS(NPS),NPS=1,NPSMAX)
      READ(21) (TTPS(NPS),NPS=1,NPSMAX)
      READ(21) (TEPS(NPS),NPS=1,NPSMAX)
      READ(21) (OMPS(NPS),NPS=1,NPSMAX)
C
c$$$      READ(21) NSGMAX,NTGMAX
c$$$      READ(21) RA,RKAP,RDLT,RB
c$$$      READ(21) PJ0,PJ1,PJ2,PROFJ0,PROFJ1,PROFJ2
c$$$      READ(21) PP0,PP1,PP2,PROFP0,PROFP1,PROFP2
c$$$      READ(21) PT0,PT1,PT2,PROFT0,PROFT1,PROFT2
c$$$      READ(21) PV0,PV1,PV2,PROFV0,PROFV1,PROFV2
c$$$      READ(21) PROFR0,PROFR1,PROFR2
c$$$C      READ(21) PTS,PN0,HM
      CLOSE(21)
C
      IERR=0
C
C     ******
C
      KXNDEV='jet'
      KXNDCG='19691'
C
    1 WRITE(6,*) '# DEVICE NAME ?'
      READ(5,'(A40)',ERR=1,END=9000) KXNDEV
    2 WRITE(6,*) '# DISCHARGE NUMBER ?'
      READ(5,'(A40)',ERR=2,END=1) KXNDCG
C
      CALL KTRIM(KXNDEV,IKNDEV)
      CALL KTRIM(KXNDCG,IKNDCG)
C
      KDIRX='../../tr.new/data/'//KXNDEV(1:IKNDEV)//'/'
     &                          //KXNDCG(1:IKNDCG)//'/in/'
      CALL KTRIM(KDIRX,IKDIRX)
      KDIRR2=KDIRX(1:IKDIRX)//KXNDEV(1:IKNDEV)
     &       //'2d'//KXNDCG(1:IKNDCG)//'.'
C
    6 WRITE(6,*) 'INPUT FILEID'
      READ(5,'(A80)',ERR=6,END=6) KFID
      CALL TRXREQ(KFID,TIME,R,Z,F2,NREM,NZEM,NRXMAX,NZXMAX,1)
C
      NRGMAX=NRXMAX
      NZGMAX=NZXMAX
      DO NZG=1,NZGMAX
      DO NRG=1,NRGMAX
         RG(NRG)=R(NRG)
         ZG(NZG)=Z(NZG)
         PSIRZ(NRG,NZG)=F2(NRG,NZG)
      ENDDO
      ENDDO
C
      RETURN
C
 9000 IERR=1
      RETURN
      END
C
C     ***** GET PARAMETERS *****
C
      SUBROUTINE EQGETB(BB1,RR1,RIP1,RA1,RKAP1,RDEL1,RB1)
C
      INCLUDE '../eq/eqcomq.inc'
C
      BB1  =BB
      RR1  =RR
      RIP1 =RIP
      RA1  =RA
      RKAP1=RKAP
      RDEL1=RDLT
      RB1  =RB
      RETURN
      END
C
C     *************************************************************
C
C     ***** READ EQ VARIABLE *****
C
      SUBROUTINE TRXREQ(KFID,T,R,Z,F2,NRM,NZM,NRXMAX,NZXMAX,MODE)
C
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION R(NRM),Z(NZM),F2(NRM,NZM)
      COMMON /TRKID1/ KDIRR2
      CHARACTER KDIRR2*80
      CHARACTER KFID*80,KFILE*80,KFILEB*80
      CHARACTER KMATCH1*80,KMATCH2*80,KMATCH3*80,KMATCH4*80,KMATCH5*80
      CHARACTER KKLINE*80,KKLINE1*80,KKLINE2*80
      LOGICAL KMATCH
C
      IMATCH=0
      KMATCH1='# OF X PTS'
      KMATCH2='# OF Y PTS'
      KMATCH3='# OF PTS'
      KMATCH4='# OF T PTS'
      KMATCH5='# OF Z PTS'
C
      CALL KTRIM(KDIRR2,KL2)
      KFILE=KDIRR2(1:KL2)//KFID
      CALL KTRIM(KFILE,KL2)
      KFILEB=KFILE(1:KL2)//'.bin'
C
      IF(MODE.EQ.1) THEN
         OPEN(15,FILE=KFILEB,IOSTAT=IST,FORM='UNFORMATTED',
     &        STATUS='OLD',ERR=8)
         READ(15) T,NRXMAX,NZXMAX
         READ(15) (R(NRX),NRX=1,NRXMAX)
         READ(15) (Z(NZX),NZX=1,NZXMAX)
         READ(15) ((F2(NRX,NZX),NRX=1,NRXMAX),NZX=1,NZXMAX)
         CLOSE(15)
         WRITE(6,*) ' - READ FILE :',KFILEB(1:45),
     &              '(',NRXMAX,',',NZXMAX,')'
         GOTO 9000
      ENDIF
C
    8 OPEN(15,FILE=KFILE,IOSTAT=IST,FORM='FORMATTED',
     &     STATUS='OLD',ERR=10)
      GOTO 100
C
   10 CONTINUE
      WRITE(6,*) 'XX NOT FOUND :',KFILE(1:45)
      NZXMAX=0
      GOTO 9000
C
  100 CONTINUE
         READ(15,'(A80)',ERR=8000,END=9000) KKLINE
         CALL KTRIM(KKLINE,KL)
         IF(KL.EQ.0) GOTO 100
         INCL=KKINDEX(KKLINE,';')
         IF(INCL.EQ.0) THEN
            IF(IMATCH.GE.2) GOTO 1000
            GOTO 100
         ENDIF
         CALL KSPLIT(KKLINE,';',KKLINE1,KKLINE2)
         CALL KTRIM(KKLINE1,KL)
         CALL KEXTR(KKLINE2)
         IF(KMATCH(KKLINE2,KMATCH1)) THEN
            READ(KKLINE1,*,ERR=8000) NRXMAX
            IMATCH=IMATCH+1
         ELSE IF(KMATCH(KKLINE2,KMATCH2)) THEN
            READ(KKLINE1,*,ERR=8000) NZXMAX
            IMATCH=IMATCH+1
         ELSE IF(KMATCH(KKLINE2,KMATCH3)) THEN
            READ(KKLINE1,*,ERR=8000) NTXMAX
            IMATCH=IMATCH+1
         ELSE IF(KMATCH(KKLINE2,KMATCH4)) THEN
            READ(KKLINE1,*,ERR=8000) NTXMAX
            IMATCH=IMATCH+1
         ELSE IF(KMATCH(KKLINE2,KMATCH5)) THEN
            READ(KKLINE1,*,ERR=8000) NFXMAX
            IMATCH=IMATCH+1
         ENDIF
      GOTO 100
C
 1000 CONTINUE
C
      BACKSPACE 15
C
      CALL NDINIT
      DO NTX=1,NTXMAX
         CALL NDREAD(15,T,IERR)
         IF(IERR.NE.0) GOTO 8000
      ENDDO
      DO 1030 NRX=1,NRXMAX
         CALL NDREAD(15,R(NRX),IERR)
         IF(IERR.NE.0) GOTO 8000
 1030 CONTINUE
      DO 1040 NZX=1,NZXMAX
         CALL NDREAD(15,Z(NZX),IERR)
         IF(IERR.NE.0) GOTO 8000
 1040 CONTINUE
      DO NZX=1,NZXMAX
      DO NRX=1,NRXMAX
         CALL NDREAD(15,F2(NRX,NZX),IERR)
         IF(IERR.NE.0) GOTO 8000
      ENDDO
      ENDDO
C
      CLOSE(15)
      WRITE(6,*) ' - READ FILE :',KFILE(1:45),
     &           '(',NRXMAX,',',NZXMAX,')'
C
      IF(MODE.EQ.1) THEN
         OPEN(15,FILE=KFILEB,IOSTAT=IST,FORM='UNFORMATTED',
     &        STATUS='NEW',ERR=8010)
         WRITE(15) T,NRXMAX,NZXMAX
         WRITE(15) (R(NRX),NRX=1,NRXMAX)
         WRITE(15) (Z(NZX),NZX=1,NZXMAX)
         WRITE(15) ((F2(NRX,NZX),NRX=1,NRXMAX),NZX=1,NZXMAX)
         WRITE(6,*) ' - WRITE FILE:',KFILEB(1:45)
         CLOSE(15)
      ENDIF
C
 9000 IF(KFID(1:6).EQ.'VOLUME'.OR.
     &   KFID(1:4).EQ.'SURF'.OR.
     &   KFID(1:6).EQ.'RMINOR') THEN
      IF(R(1).NE.0.D0) THEN
         NRXMAX=NRXMAX+1
         DO NRX=NRXMAX,2,-1
            R(NRX)=R(NRX-1)
         ENDDO
         R(1)=0.D0
         DO NZX=1,NZXMAX
            DO NRX=NRXMAX,2,-1
               F2(NRX,NZX)=F2(NRX-1,NZX)
            ENDDO
            F2(1,NZX)=0.D0
         ENDDO
      ENDIF
      ENDIF
      RETURN
C
 8000 WRITE(6,*) 'XX FILE READ ERROR'
      RETURN
 8010 WRITE(6,*) 'XX FILE OPEN ERROR: STATSU = ',IST
      RETURN
      END
C
C     ***** INITIALIZATION FOR READING UFILE *****
C
      SUBROUTINE NDINIT
C
      PARAMETER (NLENM=80)
      COMMON /COMND1/ NDPOS
C
      NDPOS=NLENM
      RETURN
      END
C
C     ***** READING UFILE *****
C
      SUBROUTINE NDREAD(IRD,XD,IERR)
C
      PARAMETER (NLENM=80)
      COMMON /COMND1/ NDPOS
      COMMON /COMND2/ LINE
      REAL*8 XD
      CHARACTER LINE*(NLENM),NUMD*40
C
   10 IF(NDPOS.EQ.NLENM) THEN
         READ(IRD,'(A80)',ERR=8000,END=9000) LINE
         NDPOS=0
      ENDIF
C
   20 CONTINUE
         NDPOS=NDPOS+1
      IF(LINE(NDPOS:NDPOS).EQ.' '.AND.NDPOS.LT.NLENM) GOTO 20
C
      IF(NDPOS.LT.NLENM) THEN
         NDPOS1=NDPOS
   30    CONTINUE
            NDPOS=NDPOS+1
         IF(LINE(NDPOS:NDPOS).NE.'E'.AND.
     &      LINE(NDPOS:NDPOS).NE.'e'.AND.
     &      NDPOS.LT.NLENM) GOTO 30
C
         IF(NDPOS.LT.NLENM) THEN
            NDPOS=NDPOS+1
   40       CONTINUE
               NDPOS=NDPOS+1
            IF(LINE(NDPOS:NDPOS).NE.' '.AND.
     &         LINE(NDPOS:NDPOS).NE.'-'.AND.
     &         NDPOS.LT.NLENM) GOTO 40
C
            IF(NDPOS.NE.NLENM) NDPOS=NDPOS-1
            NDPOS2=NDPOS
            NUMD=LINE(NDPOS1:NDPOS2)
            READ(NUMD,*,ERR=100) XD
C            WRITE(6,*) NDPOS1,NDPOS2,XD
            IERR=0
            RETURN
         ENDIF
      ENDIF
      GOTO 10
C
  100 NDPOS=NLENM
      GOTO 10
C
 8000 IERR=1
      RETURN
 9000 IERR=2
      RETURN
      END
C
C     ***** READ 2D VARIABLE *****
C
      SUBROUTINE TRXR2D(KDIRR2,KFID,T,R,F2,NRM,NTM,NRXMAX,NTXMAX,MODEL)
C
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION T(NTM),R(NRM),F2(NRM,NTM)
      CHARACTER KDIRR1*80,KDIRR2*80
      CHARACTER KFID*10,KFIDB*15,KFILE*80,KFILEB*80
      CHARACTER KMATCH1*80,KMATCH2*80,KMATCH3*80
      CHARACTER KKLINE*80,KKLINE1*80,KKLINE2*80
      LOGICAL KMATCH,LEX
C
      MODE=MODEL
      IMATCH=0
      KMATCH1='# OF X PTS'
      KMATCH2='# OF Y PTS'
      KMATCH3='# OF PTS'
C
      CALL KTRIM(KDIRR2,KL2)
      KFILE=KDIRR2(1:KL2)//KFID
      CALL KTRIM(KFILE,KL2)
      KFILEB=KFILE(1:KL2)//'.bin'
C
      INQUIRE(FILE=KFILEB,EXIST=LEX,ERR=9000)
      IF(LEX) THEN
         MODE=1
      ENDIF
C
 600  FORMAT(' ',A,A,A,I3,A,I3,A)
      IF(MODE.EQ.1) THEN
         OPEN(15,FILE=KFILEB,IOSTAT=IST,FORM='UNFORMATTED',
     &        STATUS='OLD',ERR=8)
         READ(15) NRXMAX,NTXMAX
         READ(15) (R(NRX),NRX=1,NRXMAX)
         READ(15) (T(NTX),NTX=1,NTXMAX)
         READ(15) ((F2(NRX,NTX),NRX=1,NRXMAX),NTX=1,NTXMAX)
         CLOSE(15)
         KFIDB=KFID//'.bin'
         WRITE(6,600) ' - READ FILE :',KFIDB,
     &                '(',NRXMAX,',',NTXMAX,')'
         GOTO 9000
      ENDIF
C
    8 OPEN(15,FILE=KFILE,IOSTAT=IST,FORM='FORMATTED',
     &     STATUS='OLD',ERR=10)
      GOTO 100
C
   10 CONTINUE
      WRITE(6,*) 'XX NOT FOUND :',KFILE(1:55)
      NTXMAX=0
      GOTO 9000
C
  100 CONTINUE
         READ(15,'(A80)',ERR=8000,END=9000) KKLINE
         CALL KTRIM(KKLINE,KL)
         IF(KL.EQ.0) GOTO 100
         INCL=KKINDEX(KKLINE,';')
         IF(INCL.EQ.0) THEN
            IF(IMATCH.GE.2) GOTO 1000
            GOTO 100
         ENDIF
         CALL KSPLIT(KKLINE,';',KKLINE1,KKLINE2)
         CALL KTRIM(KKLINE1,KL)
         CALL KEXTR(KKLINE2)
         IF(KMATCH(KKLINE2,KMATCH1)) THEN
            READ(KKLINE1,*,ERR=8000) NRXMAX
            IMATCH=IMATCH+1
         ELSE IF(KMATCH(KKLINE2,KMATCH2)) THEN
            READ(KKLINE1,*,ERR=8000) NTXMAX
            IMATCH=IMATCH+1
         ELSE IF(KMATCH(KKLINE2,KMATCH3)) THEN
            READ(KKLINE1,*,ERR=8000) NRXMAX
            IMATCH=IMATCH+1
         ENDIF
      GOTO 100
C
 1000 CONTINUE
C
      BACKSPACE 15
C
      CALL NDINIT
      DO 1030 NRX=1,NRXMAX
         CALL NDREAD(15,R(NRX),IERR)
         IF(IERR.NE.0) GOTO 8000
 1030 CONTINUE
      DO 1040 NTX=1,NTXMAX
         CALL NDREAD(15,T(NTX),IERR)
         IF(IERR.NE.0) GOTO 8000
 1040 CONTINUE
      DO NTX=1,NTXMAX
      DO NRX=1,NRXMAX
         CALL NDREAD(15,F2(NRX,NTX),IERR)
         IF(IERR.NE.0) GOTO 8000
      ENDDO
      ENDDO
C
      CLOSE(15)
      WRITE(6,600) ' - READ FILE :',KFILE(1:55),
     &             '(',NRXMAX,',',NTXMAX,')'
C
      IF(MODE.EQ.0) THEN
         OPEN(15,FILE=KFILEB,IOSTAT=IST,FORM='UNFORMATTED',
     &        STATUS='NEW',ERR=8010)
         WRITE(15) NRXMAX,NTXMAX
         WRITE(15) (R(NRX),NRX=1,NRXMAX)
         WRITE(15) (T(NTX),NTX=1,NTXMAX)
         WRITE(15) ((F2(NRX,NTX),NRX=1,NRXMAX),NTX=1,NTXMAX)
         WRITE(6,*) ' - WRITE FILE:',KFILEB(1:60)
         CLOSE(15)
      ENDIF
C
 9000 IF(KFID(1:6).EQ.'VOLUME'.OR.
     &   KFID(1:4).EQ.'SURF'.OR.
     &   KFID(1:6).EQ.'RMINOR') THEN
      IF(R(1).NE.0.D0) THEN
         NRXMAX=NRXMAX+1
         DO NRX=NRXMAX,2,-1
            R(NRX)=R(NRX-1)
         ENDDO
         R(1)=0.D0
         DO NTX=1,NTXMAX
            DO NRX=NRXMAX,2,-1
               F2(NRX,NTX)=F2(NRX-1,NTX)
            ENDDO
            F2(1,NTX)=0.D0
         ENDDO
      ENDIF
      ENDIF
      RETURN
C
 8000 WRITE(6,*) 'XX FILE READ ERROR'
      RETURN
 8010 WRITE(6,*) 'XX FILE OPEN ERROR: STATSU = ',IST
      RETURN
      END
