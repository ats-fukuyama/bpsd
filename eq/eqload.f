C     $Id$
C
C     ***** LOAD EQUILIBRIUM DATA *****
C
      SUBROUTINE EQLOAD(MODELG,KNAMEQ1,IERR)
C
      INCLUDE '../eq/eqcomq.h'
      CHARACTER*32 KNAMEQ1
C
      PI=2.D0*ASIN(1.D0)
      RMU0=4.D0*PI*1.D-7
      KNAMEQ=KNAMEQ1
C
      IF(MODELG.EQ.1) THEN
         CALL EQRTSK(IERR)
      ELSEIF(MODELG.EQ.2) THEN
C         CALL EQJT60(KNAMEQ)
      ELSEIF(MODELG.EQ.3) THEN
C         CALL EQRJFT(KNAMEQ)
      ELSE
         WRITE(6,*) 'XX EQLOAD: UNKNOWN MODELG: MODELG=',MODELG
      ENDIF
C
      RETURN
      END
C
C     ***** LOAD TASK/EQ DATA *****
C
      SUBROUTINE EQRTSK(IERR)
C
      INCLUDE '../eq/eqcomq.h'
C
      LOGICAL LEX
C
      IF(KNAMEQ(1:2).EQ.'  ') GOTO 9000
      INQUIRE(FILE=KNAMEQ,EXIST=LEX,ERR=9000)
      IF(LEX) THEN
         OPEN(21,FILE=KNAMEQ,IOSTAT=IST,STATUS='OLD',ERR=10,
     &        FORM='UNFORMATTED')
         WRITE(6,*) '# OLD FILE (',KNAMEQ,') IS ASSIGNED FOR INPUT.'
         GOTO 30
   10    WRITE(6,*) 'XX OLD FILE OPEN ERROR : IOSTAT = ',IST
         GOTO 9000
      ELSE
         WRITE(6,*) 'XX FILE (',KNAMEQ,') NOT FOUND'
         GOTO 9000
      ENDIF
C
   30 READ(21) RR,BB,RIP
      READ(21) NRGMAX,NZGMAX
      READ(21) (RG(NRG),NRG=1,NRGMAX)
      READ(21) (ZG(NZG),NZG=1,NZGMAX)
      READ(21) ((PSIRZ(NRG,NZG),NRG=1,NRGMAX),NZG=1,NZGMAX)
      READ(21) NPSMAX
      READ(21) (PSIPS(NPS),NPS=1,NPSMAX)
      READ(21) (PPPS(NPS),NPS=1,NPSMAX)
      READ(21) (TTPS(NPS),NPS=1,NPSMAX)
      READ(21) (TEPS(NPS),NPS=1,NPSMAX)
      READ(21) (OMPS(NPS),NPS=1,NPSMAX)
C
      READ(21) NSGMAX,NTGMAX
      READ(21) RA,RKAP,RDLT,RB
      READ(21) PJ0,PJ1,PJ2,PROFJ0,PROFJ1,PROFJ2
      READ(21) PP0,PP1,PP2,PROFP0,PROFP1,PROFP2
      READ(21) PT0,PT1,PT2,PROFT0,PROFT1,PROFT2,PTS,PN0
      READ(21) PV0,PV1,PV2,PROFV0,PROFV1,PROFV2,HM
      READ(21) PROFR0,PROFR1,PROFR2
      CLOSE(21)
C
      IERR=0
      RETURN
C
 9000 IERR=1
      RETURN
      END
C
C     ***** GET PARAMETERS *****
C
      SUBROUTINE EQGETB(BB1,RR1,RIP1,RA1,RKAP1,RDEL1,RB1)
C
      INCLUDE '../eq/eqcomq.h'
C
      BB1  =BB
      RR1  =RR
      RIP1 =RIP
      RA1  =RA
      RKAP1=RKAP
      RDEL1=RDLT
      RB1  =RB
      RETURN
      END
