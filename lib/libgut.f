C     $Id$
C
C
C     ***********************************************************
C
C           CEILING FUNCTION FOR LOG10 PLOT
C
C     ***********************************************************
C
      DOUBLE PRECISION FUNCTION PLOG(X,XMIN,XMAX)
C
      REAL*8 X,XMIN,XMAX
C
      IF(X.LT.XMIN) THEN
         PLOG=LOG10(XMIN)
      ELSEIF(X.GT.XMAX) THEN
         PLOG=LOG10(XMAX)
      ELSE
         PLOG=LOG10(X)
      ENDIF
C
      RETURN
      END
C
C     ****** CONTOUR PLOT : XY, VARIABLE POSITION, PATTERN ******
C
      SUBROUTINE CONTR5(Z,X,Y,NXA,NXMAX,NYMAX,
     &                  ZORG,ZSTEP,NSTEP)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSCTR5/ NXAC,NXMAXC,NYMAXC
C
      EXTERNAL CONTS5
      DIMENSION Z(NXA,*),X(NXA,*),Y(NXA,*)
      DATA EPS/1.E-32/
C
      IF(ABS(ZSTEP).LT.EPS) RETURN
C
      NXAC=NXA
      NXMAXC=NXMAX
      NYMAXC=NYMAX
      CALL CONTR0(Z,X,Y,NXA,NXMAX,NYMAX,
     &            ZORG,ZSTEP,NSTEP,2,CONTS5)
      RETURN
      END
C
C     ****** CONTOUR PLOT : XY, VARIABLE POSITION, PATTERN ******
C
      SUBROUTINE CONTP5(Z,X,Y,NXA,NXMAX,NYMAX,
     &                  ZORG,ZSTEP,NSTEP,IPRD,IPAT,KA)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSCTR5/ NXAC,NXMAXC,NYMAXC
C
      EXTERNAL CONTS5
      DIMENSION Z(NXA,*),KA(2,*),X(NXA,*),Y(NXA,*)
      DATA EPS/1.E-32/
C
      IF(ABS(ZSTEP).LT.EPS) RETURN
C
      NXAC=NXA
      NXMAXC=NXMAX
      NYMAXC=NYMAX
      CALL CONTP0(Z,X,Y,NXA,NXMAX,NYMAX,
     &            ZORG,ZSTEP,NSTEP,IPRD,IPAT,KA,CONTS5)
      RETURN
      END
C
C     ****** CONTOUR PLOT : XY, VARIABLE POSITION, PATTERN ******
C
      SUBROUTINE CONTQ5(Z,X,Y,NXA,NXMAX,NYMAX,
     &                  ZORG,ZSTEP,NSTEP,IPRD,IPAT,KA)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSCTR5/ NXAC,NXMAXC,NYMAXC
C
      EXTERNAL CONTS5
      DIMENSION Z(NXA,*),KA(4,*),X(NXA,*),Y(NXA,*)
      DATA EPS/1.E-32/
C
      IF(ABS(ZSTEP).LT.EPS) RETURN
C
      NXAC=NXA
      NXMAXC=NXMAX
      NYMAXC=NYMAX
      CALL CONTQ0(Z,X,Y,NXA,NXMAX,NYMAX,
     &            ZORG,ZSTEP,NSTEP,IPRD,IPAT,KA,CONTS5)
      RETURN
      END
C
C     ****** CONTOUR PLOT SLAVE ROUTINE : XY VARIABLE ******
C
      SUBROUTINE CONTS5(NAX,NAY,NBX,NBY,U0,UA,UB,X,Y,IPAT,IND)
C
      COMMON /GSCTR5/ NXAC,NXMAXC,NYMAXC
      DIMENSION X(*),Y(*)
C
      CALL INQGDEFIN(PXMIN,PXMAX,PYMIN,PYMAX,
     &                      GXMIN,GXMAX,GYMIN,GYMAX)
      DX=(PXMAX-PXMIN)/(GXMAX-GXMIN)
      DY=(PYMAX-PYMIN)/(GYMAX-GYMIN)
C
      NAXL=ABS(NAX)
      NAYL=ABS(NAY)
      IF(NAXL.GT.NXMAXC) NAXL=NAXL-NXMAXC
      IF(NAYL.GT.NYMAXC) NAYL=NAYL-NYMAXC
C
      NBXL=ABS(NBX)
      NBYL=ABS(NBY)
      IF(NBXL.GT.NXMAXC) NBXL=NBXL-NXMAXC
      IF(NBYL.GT.NYMAXC) NBYL=NBYL-NYMAXC
C
      IF(NAX.GT.0) THEN
         NA=NXAC*(NAYL-1)+NAXL
         XA=DX*(X(NA)-GXMIN)+PXMIN
         YA=DY*(Y(NA)-GYMIN)+PYMIN
      ELSE
         NAX1=NAXL+1
         IF(NAX1.GT.NXMAXC) NAX1=NAX1-NXMAXC
         NAY1=NAYL+1
         IF(NAY1.GT.NYMAXC) NAY1=NAY1-NYMAXC
         NA1=NXAC*(NAYL-1)+NAX1
         NA2=NXAC*(NAY1-1)+NAXL
         XA=DX*(0.5*(X(NA1)+X(NA2))-GXMIN)+PXMIN
         YA=DY*(0.5*(Y(NA1)+Y(NA2))-GYMIN)+PYMIN
      ENDIF
      IF(NBX.GT.0) THEN
         NB=NXAC*(NBYL-1)+NBXL
         XB=DX*(X(NB)-GXMIN)+PXMIN
         YB=DY*(Y(NB)-GYMIN)+PYMIN
      ELSE
         NBX1=NBXL+1
         IF(NBX1.GT.NXMAXC) NBX1=NBX1-NXMAXC
         NBY1=NBYL+1
         IF(NBY1.GT.NYMAXC) NBY1=NBY1-NYMAXC
         NB1=NXAC*(NBYL-1)+NBX1
         NB2=NXAC*(NBY1-1)+NBXL
         XB=DX*(0.5*(X(NB1)+X(NB2))-GXMIN)+PXMIN
         YB=DY*(0.5*(Y(NB1)+Y(NB2))-GYMIN)+PYMIN
      ENDIF
      IF(UB.NE.UA) THEN
         XS=(XB-XA)*(U0-UA)/(UB-UA)+XA
         YS=(YB-YA)*(U0-UA)/(UB-UA)+YA
         IF(IND.EQ.1) THEN
            CALL MOVEPT(XS,YS,IPAT)
         ELSEIF(IND.EQ.-1) THEN
            CALL MOVEPT(XS,YS,-IPAT)
         ELSEIF(IND.EQ.0) THEN
            CALL DRAWPT(XS,YS)
         ENDIF
      ENDIF
C      WRITE(6,*) NAX,NAY,NBX,NBY,XS,YS
      RETURN
      END
C
C     ****** CONTOUR PLOT : R-THETA, VARIABLE STEP, PATTERN ******
C
      SUBROUTINE CONTP6(Z,X,Y,NXA,NXMAX,NYMAX,
     &                  ZORG,ZSTEP,NSTEP,IPAT,KA)
C
      COMMON /GSCTR5/ NXAC,NXMAXC,NYMAXC
C
      EXTERNAL CONTS5D
      DIMENSION Z(NXA,*),X(*),Y(*),KA(2,*)
    2 DATA EPS/1.E-32/
C
      IF(ABS(ZSTEP).LT.EPS) RETURN
C
      NXAC=NXA
      NXMAXC=NXMAX
      NYMAXC=NYMAX
C
      CALL CONTP0(Z,X,Y,NXA,NXMAX,NYMAX,
     &            ZORG,ZSTEP,NSTEP,0,IPAT,KA,CONTS6)
C
      RETURN
      END
C
C     ****** CONTOUR PLOT SLAVE ROUTINE : R-THETA VARIABLE ******
C
      SUBROUTINE CONTS6(NAX,NAY,NBX,NBY,U0,UA,UB,X,Y,IPAT,IND)
C
      IMPLICIT LOGICAL(L)
      COMMON /GSCTR4/ RMAX,RT,TT,XT,YT
      COMMON /GSCTR5/ NXAC,NXMAXC,NYMAXC
      DIMENSION X(*),Y(*)
C
      CALL INQGDEFIN(PXMIN,PXMAX,PYMIN,PYMAX,
     &               GXMIN,GXMAX,GYMIN,GYMAX)
      DX=(PXMAX-PXMIN)/(GXMAX-GXMIN)
      DY=(PYMAX-PYMIN)/(GYMAX-GYMIN)
C
      IF(NAX.GT.0) THEN
         XA=X(NAX+(NAY-1)*NXAC)
         YA=Y(NAX+(NAY-1)*NXAC)
      ELSE
         NAX1=ABS(NAX)
         NAX2=ABS(NAX)+1
         IF(NAX2.GT.NXMAXC) NAX2=NAX2-NXMAXC
         NAY1=NAY
         NAY2=NAY+1
         IF(NAY2.GT.NYMAXC) NAY2=NAY2-NYMAXC
         XA=0.5D0*(X(NAX1+(NAY2-1)*NXAC)+X(NAX2+(NAY2-1)*NXAC))
         YA=0.5D0*(Y(NAX1+(NAY2-1)*NXAC)+Y(NAX2+(NAY2-1)*NXAC))
      ENDIF
C         
      IF(NBX.GT.0) THEN        
         XB=X(NBX+(NBY-1)*NXAC)
         YB=Y(NBX+(NBY-1)*NXAC)
      ELSE
         NBX1=ABS(NBX)
         NBX2=ABS(NBX)+1
         IF(NBX2.GT.NXMAXC) NBX2=NBX2-NXMAXC
         NBY1=NBY
         NBY2=NBY+1
         IF(NBY2.GT.NYMAXC) NBY2=NBY2-NYMAXC
         XB=0.5D0*(X(NBX1+(NBY2-1)*NXAC)+X(NBX2+(NBY2-1)*NXAC))
         YB=0.5D0*(Y(NBX1+(NBY2-1)*NXAC)+Y(NBX2+(NBY2-1)*NXAC))
      ENDIF
C
      XS=(XB-XA)*(U0-UA)/(UB-UA)+XA
      YS=(YB-YA)*(U0-UA)/(UB-UA)+YA
      XS=DX*(XS-GXMIN)+PXMIN
      YS=DY*(YS-GYMIN)+PYMIN
C
      IF(IND.EQ.1) THEN
         CALL MOVEPT(XS,YS,IPAT)
      ELSEIF(IND.EQ.-1) THEN
         CALL MOVEPT(XS,YS,-IPAT)
      ELSEIF(IND.EQ.0) THEN
         CALL DRAWPT(XS,YS)
      ENDIF
      XT=XS
      YT=YS
      RETURN
      END
C
C
C
      SUBROUTINE GSGL_CONTF5 (Z,X,Y,NXA,NXMAX,NYMAX,IPRD,RGBFUNC)
      IMPLICIT NONE
      INTEGER NXA,NXMAX,NYMAX,IPRD,I
      REAL Z(NXA,*),X(NXA,*),Y(NXA,*)
      REAL Z2(1001,2),X2(1001,2),Y2(1001,2)
      REAL Z3(2,1001),X3(2,1001),Y3(2,1001)
      REAL XL3, YL3, ZL3, ZMIN, ZMAX
      REAL OX, OY, OZ
      REAL VX(3),VY(3),VZ(3)
      DATA VX/1.0,0.0,0.0/, VY/0.0,1.0,0.0/, VZ/.0,0.0,1.0/
      REAL PXMIN,PXMAX,PYMIN,PYMAX,GXMIN,GXMAX,GYMIN,GYMAX,DZ
      EXTERNAL RGBFUNC
C      
      CALL OFFCLP
      CALL GMNMX2(Z, NXA, 1, NXMAX, 1, 1, NYMAX, 1, ZMIN, ZMAX)
      CALL INQGDEFIN(PXMIN,PXMAX,PYMIN,PYMAX,GXMIN,GXMAX,GYMIN,GYMAX)
      XL3 = PXMAX - PXMIN
      YL3 = PYMAX - PYMIN
      ZL3 = 10.0
      OX = GXMIN + (25.6 * 0.5 - PXMIN) / XL3 * (GXMAX - GXMIN)
      OY = GYMIN + (19.0 * 0.5 - PYMIN) / YL3 * (GYMAX - GYMIN)
      OZ = (ZMIN + ZMAX) * 0.5
C
      DZ = (ZMAX-ZMIN) * 1.E-3
      CALL GDEFIN3D(XL3,YL3,ZL3,GXMIN,GXMAX,GYMIN,GYMAX,ZMIN-DZ,ZMAX+DZ)
      CALL SETPROJECTIONTYPE (0)
      CALL SET3DCOORD_CAUT1 (OX,OY,OZ,20.0,VX,VY,VZ)
      CALL PERS3D5 (Z,X,Y,NXA,NXMAX,NYMAX,4,RGBFUNC)
C
      IF ((IPRD.EQ.1.OR.IPRD.EQ.3).AND.NYMAX.LE.1001) THEN
         DO I=1,NYMAX
            Z3(1,I) = Z(NXMAX,I)
            X3(1,I) = X(NXMAX,I)
            Y3(1,I) = Y(NXMAX,I)
            Z3(2,I) = Z(1,I)
            X3(2,I) = X(1,I)
            Y3(2,I) = Y(1,I)
         ENDDO
         CALL PERS3D5(Z3,X3,Y3,2,2,NYMAX,4,RGBFUNC)
      ENDIF
      IF ((IPRD.EQ.2.OR.IPRD.EQ.3).AND.NXMAX.LE.1001) THEN
         DO I=1,NXMAX
            Z2(I,1) = Z(I,NYMAX)
            X2(I,1) = X(I,NYMAX)
            Y2(I,1) = Y(I,NYMAX)
            Z2(I,2) = Z(I,1)
            X2(I,2) = X(I,1)
            Y2(I,2) = Y(I,1)
         ENDDO
         CALL PERS3D5(Z2,X2,Y2,1001,NXMAX,2,4,RGBFUNC)
      ENDIF         
C
      CALL GFRAME()
      RETURN
      END

