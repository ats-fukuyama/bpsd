C     $Id$
C
C     ***** FIND CHARACTER POSITION *****
C
      FUNCTION KKINDEX(KKLINE,KID)
C
      PARAMETER(KLEN=80)
      CHARACTER KKLINE*80,KID*1
C
      DO I=1,KLEN
         IF(KKLINE(I:I).EQ.KID) GOTO 100
      ENDDO
      KKINDEX=0
      RETURN
C
  100 KKINDEX=I
      RETURN
      END
C
C     ***** SEPARATE STRING AT CHAR *****
C
      SUBROUTINE KSPLIT(KKLINE,KID,KKLINE1,KKLINE2)
C
      PARAMETER(KLEN=80)
      CHARACTER KKLINE*80,KKLINE1*80,KKLINE2*80
      CHARACTER KID*1
C
      DO I=1,KLEN
         IF(KKLINE(I:I).EQ.KID) GOTO 100
      ENDDO
      KKLINE1=KKLINE
      KKLINE2=' '
      GOTO 9000
C
  100 IF(I.EQ.1) THEN
         KKLINE1=' '
      ELSE
         KKLINE1=KKLINE(1:I-1)
      ENDIF
      KKLINE2=KKLINE(I+1:)
c
 9000 RETURN
      END
C
C     ***** TRIM STRING AND RETURN LENGTH *****
C
      SUBROUTINE KTRIM(KKLINE,KL)
C
      PARAMETER(KLEN=80)
      CHARACTER KKLINE*80,KKLINE1*80
C
      DO I=1,KLEN
         IF(KKLINE(I:I).NE.' ') GOTO 100
      ENDDO
  100 ITOP=I
C
      DO I=KLEN,1,-1
         IF(KKLINE(I:I).NE.' ') GOTO 200
      ENDDO
  200 IBOTTOM=I
C
      IF(ITOP.GT.KLEN) THEN
         KKLINE=' '
         KL=0
      ELSE IF(IBOTTOM.LT.1) THEN
         KKLINE=' '
         KL=0
      ELSE
         KKLINE1=KKLINE(ITOP:IBOTTOM)
         KKLINE=KKLINE1
         KL=IBOTTOM-ITOP+1
      ENDIF
      RETURN
      END
C
C     ***** EXTRACT STRING FROM KSTRING *****
C
      SUBROUTINE KEXTR(KKLINE)
C
      CHARACTER KKLINE*80,KKLINE1*80,KKLINE2*80
      CHARACTER KID*1
C
      KID=KKLINE(1:1)
      KKLINE1=KKLINE(2:)
      INCL=KKINDEX(KKLINE1,KID)
      IF(INCL.LE.1) THEN
         KKLINE2=KKLINE1
      ELSE
         KKLINE2=KKLINE1(1:INCL-1)
      ENDIF
      KKLINE=KKLINE2
      RETURN
      END
C
C     ***** RETURN TRUE WHEN STRINGS MATCH *****
C
      LOGICAL FUNCTION KMATCH(KKLINE1,KKLINE2)
C
      PARAMETER(KLEN=80)
      CHARACTER KKLINE1*80,KKLINE2*80
C
      DO I=1,KLEN
         IF(KKLINE1(I:I).NE.KKLINE2(I:I)) GO TO 100
      ENDDO
      KMATCH=.TRUE.
      RETURN
C
  100 KMATCH=.FALSE.
      RETURN
      END
